{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "CCI-Event",
    "title" : "CCI",
    "version" : "2025-06-13",
    "x-host_prefix": "cci"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "components" : {
    "parameters" : {
      "Content-Type" : {
        "name" : "Content-Type",
        "in" : "header",
        "description" : "消息体的类型(格式),默认取值为“application/json”",
        "required" : true,
        "schema" : {
          "example" : "application/json",
          "description" : "消息体的类型(格式),默认取值为“application/json”",
          "type" : "string",
          "default" : "application/json",
          "uniqueItems" : true
        },
        "type" : "object"
      },
      "X-Auth-Token" : {
        "name" : "X-Auth-Token",
        "in" : "header",
        "description" : "用户Token。",
        "required" : true,
        "schema" : {
          "example" : "MIIDkgYJKoZIhvcNAQcCoIIDgzCCXXXXXX...",
          "description" : "用户Token。",
          "type" : "string",
          "uniqueItems" : true
        },
        "type" : "object"
      },
      "Content-Type-Patch" : {
        "name" : "Content-Type",
        "in" : "header",
        "description" : "目前支持三种类型的PATCH请求方法的操作,参考[《使用JSON合并patch更新Deployment》](https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment)。",
        "required" : true,
        "schema" : {
          "example" : "application/merge-patch+json",
          "description" : "目前支持三种类型的PATCH请求方法的操作,参考[《使用JSON合并patch更新Deployment》](https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment)。",
          "type" : "string",
          "uniqueItems" : true
        },
        "type" : "object"
      }
    },
    "schemas" : {
      "io.k8s.apimachinery.pkg.apis.meta.v1.Status" : {
        "description" : "Status is a return value for calls that don't return other objects.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "code" : {
            "description" : "Suggested HTTP return code for this status, 0 if not set.",
            "format" : "int32",
            "type" : "integer"
          },
          "details" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails",
            "description" : "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "message" : {
            "description" : "A human-readable description of the status of this operation.",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          },
          "reason" : {
            "description" : "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions" : {
        "description" : "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
        "properties" : {
          "resourceVersion" : {
            "description" : "Specifies the target ResourceVersion",
            "type" : "string"
          },
          "uid" : {
            "description" : "Specifies the target UID.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions" : {
        "description" : "DeleteOptions may be provided when deleting an API object.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "dryRun" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "gracePeriodSeconds" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "format" : "int64",
            "type" : "integer"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "orphanDependents" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean"
          },
          "preconditions" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions",
            "description" : "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
          },
          "propagationPolicy" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails" : {
        "description" : "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
        "properties" : {
          "causes" : {
            "description" : "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
            },
            "type" : "array"
          },
          "group" : {
            "description" : "The group attribute of the resource associated with the status StatusReason.",
            "type" : "string"
          },
          "kind" : {
            "description" : "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
            "type" : "string"
          },
          "retryAfterSeconds" : {
            "description" : "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
            "format" : "int32",
            "type" : "integer"
          },
          "uid" : {
            "description" : "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause" : {
        "description" : "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
        "properties" : {
          "field" : {
            "description" : "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.",
            "type" : "string"
          },
          "message" : {
            "description" : "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
            "type" : "string"
          },
          "reason" : {
            "description" : "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta" : {
        "description" : "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
        "properties" : {
          "continue" : {
            "description" : "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
            "type" : "string"
          },
          "remainingItemCount" : {
            "description" : "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
            "format" : "int64",
            "type" : "integer"
          },
          "resourceVersion" : {
            "description" : "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type" : "string"
          },
          "selfLink" : {
            "description" : "selfLink is a URL representing this object. Populated by the system. Read-only.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ConfigMap" : {
        "description" : "ConfigMap holds configuration data for pods to consume.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "binaryData" : {
            "additionalProperties" : {
              "format" : "byte",
              "type" : "string"
            },
            "description" : "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.",
            "type" : "object"
          },
          "data" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
            "type" : "object"
          },
          "immutable" : {
            "description" : "Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil. This is a beta field enabled by ImmutableEphemeralVolumes feature gate.",
            "type" : "boolean"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference" : {
        "description" : "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "properties" : {
          "apiVersion" : {
            "description" : "API version of the referent.",
            "type" : "string"
          },
          "blockOwnerDeletion" : {
            "description" : "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "type" : "boolean"
          },
          "controller" : {
            "description" : "If true, this reference points to the managing controller.",
            "type" : "boolean"
          },
          "kind" : {
            "description" : "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "type" : "string"
          },
          "uid" : {
            "description" : "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "type" : "string"
          }
        },
        "required" : [ "apiVersion", "kind", "name", "uid" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ConfigMapList" : {
        "description" : "ConfigMapList is a resource containing a list of ConfigMap objects.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is the list of ConfigMaps.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry" : {
        "description" : "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "type" : "string"
          },
          "fieldsType" : {
            "description" : "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
            "type" : "string"
          },
          "fieldsV1" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1",
            "description" : "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
          },
          "manager" : {
            "description" : "Manager is an identifier of the workflow managing these fields.",
            "type" : "string"
          },
          "operation" : {
            "description" : "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
            "type" : "string"
          },
          "time" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1" : {
        "description" : "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.",
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Time" : {
        "description" : "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "format" : "date-time",
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta" : {
        "description" : "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "properties" : {
          "annotations" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "type" : "object"
          },
          "clusterName" : {
            "description" : "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
            "type" : "string"
          },
          "creationTimestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC."
          },
          "deletionGracePeriodSeconds" : {
            "description" : "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "format" : "int64",
            "type" : "integer"
          },
          "deletionTimestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested."
          },
          "finalizers" : {
            "description" : "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "generateName" : {
            "description" : "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.",
            "type" : "string"
          },
          "generation" : {
            "description" : "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
            "format" : "int64",
            "type" : "integer"
          },
          "labels" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "type" : "object"
          },
          "managedFields" : {
            "description" : "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "type" : "string"
          },
          "namespace" : {
            "description" : "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.",
            "type" : "string"
          },
          "ownerReferences" : {
            "description" : "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
            },
            "type" : "array"
          },
          "resourceVersion" : {
            "description" : "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.",
            "type" : "string"
          },
          "selfLink" : {
            "description" : "SelfLink is a URL representing this object. Populated by the system. Read-only.",
            "type" : "string"
          },
          "uid" : {
            "description" : "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery" : {
        "description" : "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
        "properties" : {
          "groupVersion" : {
            "description" : "groupVersion specifies the API group and version in the form \"group/version\"",
            "type" : "string"
          },
          "version" : {
            "description" : "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
            "type" : "string"
          }
        },
        "required" : [ "groupVersion", "version" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup" : {
        "description" : "APIGroup contains the name, the supported versions, and the preferred version of a group.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "name is the name of the group.",
            "type" : "string"
          },
          "preferredVersion" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery",
            "description" : "preferredVersion is the version preferred by the API server, which probably is the storage version."
          },
          "serverAddressByClientCIDRs" : {
            "description" : "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
            },
            "type" : "array"
          },
          "versions" : {
            "description" : "versions are the versions supported in this group.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "versions" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR" : {
        "description" : "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
        "properties" : {
          "clientCIDR" : {
            "description" : "The CIDR with which clients can match their IP to figure out the server address that they should use.",
            "type" : "string"
          },
          "serverAddress" : {
            "description" : "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
            "type" : "string"
          }
        },
        "required" : [ "clientCIDR", "serverAddress" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EndpointSubset" : {
        "description" : "EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:",
        "properties" : {
          "addresses" : {
            "description" : "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EndpointAddress"
            },
            "type" : "array"
          },
          "notReadyAddresses" : {
            "description" : "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EndpointAddress"
            },
            "type" : "array"
          },
          "ports" : {
            "description" : "Port numbers available on the related IP addresses.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EndpointPort"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.EndpointAddress" : {
        "description" : "EndpointAddress is a tuple that describes single IP address.",
        "properties" : {
          "hostname" : {
            "description" : "The Hostname of this endpoint",
            "type" : "string"
          },
          "ip" : {
            "description" : "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.",
            "type" : "string"
          },
          "nodeName" : {
            "description" : "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.",
            "type" : "string"
          },
          "targetRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ObjectReference",
            "description" : "Reference to object providing the endpoint."
          }
        },
        "required" : [ "ip" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Endpoints" : {
        "description" : "Endpoints is a collection of endpoints that implement the actual service. Example:",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "subsets" : {
            "description" : "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EndpointSubset"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.EndpointPort" : {
        "description" : "EndpointPort is a tuple that describes a single port.",
        "properties" : {
          "appProtocol" : {
            "description" : "The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. This is a beta field that is guarded by the ServiceAppProtocol feature gate and enabled by default.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.",
            "type" : "string"
          },
          "port" : {
            "description" : "The port number of the endpoint.",
            "format" : "int32",
            "type" : "integer"
          },
          "protocol" : {
            "description" : "The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.",
            "type" : "string"
          }
        },
        "required" : [ "port" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ObjectReference" : {
        "description" : "ObjectReference contains enough information to let you inspect or modify the referred object.",
        "properties" : {
          "apiVersion" : {
            "description" : "API version of the referent.",
            "type" : "string"
          },
          "fieldPath" : {
            "description" : "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "namespace" : {
            "description" : "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "type" : "string"
          },
          "resourceVersion" : {
            "description" : "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type" : "string"
          },
          "uid" : {
            "description" : "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.EnvVar" : {
        "description" : "EnvVar represents an environment variable present in a Container.",
        "properties" : {
          "name" : {
            "description" : "Name of the environment variable. Must be a C_IDENTIFIER.",
            "type" : "string"
          },
          "value" : {
            "description" : "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
            "type" : "string"
          },
          "valueFrom" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.EnvVarSource",
            "description" : "Source for the environment variable's value. Cannot be used if value is not empty."
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.SecretVolumeSource" : {
        "description" : "Adapts a Secret into a volume.",
        "properties" : {
          "defaultMode" : {
            "description" : "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format" : "int32",
            "type" : "integer"
          },
          "items" : {
            "description" : "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.KeyToPath"
            },
            "type" : "array"
          },
          "optional" : {
            "description" : "Specify whether the Secret or its keys must be defined",
            "type" : "boolean"
          },
          "secretName" : {
            "description" : "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.NodeSelector" : {
        "description" : "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
        "properties" : {
          "nodeSelectorTerms" : {
            "description" : "Required. A list of node selector terms. The terms are ORed.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.NodeSelectorTerm"
            },
            "type" : "array"
          }
        },
        "required" : [ "nodeSelectorTerms" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.RBDVolumeSource" : {
        "description" : "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
            "type" : "string"
          },
          "image" : {
            "description" : "The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type" : "string"
          },
          "keyring" : {
            "description" : "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type" : "string"
          },
          "monitors" : {
            "description" : "A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "pool" : {
            "description" : "The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type" : "boolean"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
          },
          "user" : {
            "description" : "The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "type" : "string"
          }
        },
        "required" : [ "monitors", "image" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.DownwardAPIVolumeFile" : {
        "description" : "DownwardAPIVolumeFile represents information to create the file containing the pod field",
        "properties" : {
          "fieldRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ObjectFieldSelector",
            "description" : "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
          },
          "mode" : {
            "description" : "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format" : "int32",
            "type" : "integer"
          },
          "path" : {
            "description" : "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "type" : "string"
          },
          "resourceFieldRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceFieldSelector",
            "description" : "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
          }
        },
        "required" : [ "path" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.DeploymentStrategy" : {
        "description" : "DeploymentStrategy describes how to replace existing pods with new ones.",
        "properties" : {
          "rollingUpdate" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.RollingUpdateDeployment",
            "description" : "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate."
          },
          "type" : {
            "description" : "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.SeccompProfile" : {
        "description" : "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
        "properties" : {
          "localhostProfile" : {
            "description" : "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
            "type" : "string"
          },
          "type" : {
            "description" : "type indicates which kind of seccomp profile will be applied. Valid options are:",
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.CephFSVolumeSource" : {
        "description" : "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
        "properties" : {
          "monitors" : {
            "description" : "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "path" : {
            "description" : "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type" : "boolean"
          },
          "secretFile" : {
            "description" : "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type" : "string"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
          },
          "user" : {
            "description" : "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "type" : "string"
          }
        },
        "required" : [ "monitors" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodAntiAffinity" : {
        "description" : "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
        "properties" : {
          "preferredDuringSchedulingIgnoredDuringExecution" : {
            "description" : "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.WeightedPodAffinityTerm"
            },
            "type" : "array"
          },
          "requiredDuringSchedulingIgnoredDuringExecution" : {
            "description" : "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodAffinityTerm"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ConfigMapEnvSource" : {
        "description" : "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.",
        "properties" : {
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the ConfigMap must be defined",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PortworxVolumeSource" : {
        "description" : "PortworxVolumeSource represents a Portworx volume resource.",
        "properties" : {
          "fsType" : {
            "description" : "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          },
          "volumeID" : {
            "description" : "VolumeID uniquely identifies a Portworx volume",
            "type" : "string"
          }
        },
        "required" : [ "volumeID" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.CSIVolumeSource" : {
        "description" : "Represents a source location of a volume to mount, managed by an external CSI driver",
        "properties" : {
          "driver" : {
            "description" : "Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
            "type" : "string"
          },
          "fsType" : {
            "description" : "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "type" : "string"
          },
          "nodePublishSecretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed."
          },
          "readOnly" : {
            "description" : "Specifies a read-only configuration for the volume. Defaults to false (read/write).",
            "type" : "boolean"
          },
          "volumeAttributes" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
            "type" : "object"
          }
        },
        "required" : [ "driver" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.api.resource.Quantity" : {
        "description" : "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.",
        "type" : "object"
      },
      "io.k8s.api.core.v1.EphemeralVolumeSource" : {
        "description" : "Represents an ephemeral volume that is handled by a normal storage driver.",
        "properties" : {
          "readOnly" : {
            "description" : "Specifies a read-only configuration for the volume. Defaults to false (read/write).",
            "type" : "boolean"
          },
          "volumeClaimTemplate" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimTemplate",
            "description" : "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long)."
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement" : {
        "description" : "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties" : {
          "key" : {
            "description" : "key is the label key that the selector applies to.",
            "type" : "string"
          },
          "operator" : {
            "description" : "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
            "type" : "string"
          },
          "values" : {
            "description" : "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "key", "operator" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Handler" : {
        "description" : "Handler defines a specific action that should be taken",
        "properties" : {
          "exec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ExecAction",
            "description" : "One and only one of the following should be specified. Exec specifies the action to take."
          },
          "httpGet" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.HTTPGetAction",
            "description" : "HTTPGet specifies the http request to perform."
          },
          "tcpSocket" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.TCPSocketAction",
            "description" : "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ServiceAccountTokenProjection" : {
        "description" : "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
        "properties" : {
          "audience" : {
            "description" : "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "type" : "string"
          },
          "expirationSeconds" : {
            "description" : "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "format" : "int64",
            "type" : "integer"
          },
          "path" : {
            "description" : "Path is the path relative to the mount point of the file to project the token into.",
            "type" : "string"
          }
        },
        "required" : [ "path" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ResourceFieldSelector" : {
        "description" : "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
        "properties" : {
          "containerName" : {
            "description" : "Container name: required for volumes, optional for env vars",
            "type" : "string"
          },
          "divisor" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity",
            "description" : "Specifies the output format of the exposed resources, defaults to \"1\""
          },
          "resource" : {
            "description" : "Required: resource to select",
            "type" : "string"
          }
        },
        "required" : [ "resource" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.GlusterfsVolumeSource" : {
        "description" : "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
        "properties" : {
          "endpoints" : {
            "description" : "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "type" : "string"
          },
          "path" : {
            "description" : "Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "type" : "boolean"
          }
        },
        "required" : [ "endpoints", "path" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EnvVarSource" : {
        "description" : "EnvVarSource represents a source for the value of an EnvVar.",
        "properties" : {
          "configMapKeyRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMapKeySelector",
            "description" : "Selects a key of a ConfigMap."
          },
          "fieldRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ObjectFieldSelector",
            "description" : "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
          },
          "resourceFieldRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceFieldSelector",
            "description" : "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
          },
          "secretKeyRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecretKeySelector",
            "description" : "Selects a key of a secret in the pod's namespace"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.FlockerVolumeSource" : {
        "description" : "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
        "properties" : {
          "datasetName" : {
            "description" : "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
            "type" : "string"
          },
          "datasetUUID" : {
            "description" : "UUID of the dataset. This is unique identifier of a Flocker dataset",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.HostPathVolumeSource" : {
        "description" : "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
        "properties" : {
          "path" : {
            "description" : "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "type" : "string"
          },
          "type" : {
            "description" : "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "type" : "string"
          }
        },
        "required" : [ "path" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodAffinityTerm" : {
        "description" : "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
        "properties" : {
          "labelSelector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "A label query over a set of resources, in this case pods."
          },
          "namespaces" : {
            "description" : "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "topologyKey" : {
            "description" : "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
            "type" : "string"
          }
        },
        "required" : [ "topologyKey" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Volume" : {
        "description" : "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
        "properties" : {
          "awsElasticBlockStore" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource",
            "description" : "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
          },
          "azureDisk" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.AzureDiskVolumeSource",
            "description" : "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
          },
          "azureFile" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.AzureFileVolumeSource",
            "description" : "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
          },
          "cephfs" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.CephFSVolumeSource",
            "description" : "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
          },
          "cinder" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.CinderVolumeSource",
            "description" : "Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
          },
          "configMap" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMapVolumeSource",
            "description" : "ConfigMap represents a configMap that should populate this volume"
          },
          "csi" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.CSIVolumeSource",
            "description" : "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
          },
          "downwardAPI" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.DownwardAPIVolumeSource",
            "description" : "DownwardAPI represents downward API about the pod that should populate this volume"
          },
          "emptyDir" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.EmptyDirVolumeSource",
            "description" : "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
          },
          "ephemeral" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.EphemeralVolumeSource",
            "description" : "Ephemeral represents a volume that is handled by a cluster storage driver (Alpha feature). The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed."
          },
          "fc" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.FCVolumeSource",
            "description" : "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "flexVolume" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.FlexVolumeSource",
            "description" : "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
          },
          "flocker" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.FlockerVolumeSource",
            "description" : "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
          },
          "gcePersistentDisk" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource",
            "description" : "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
          },
          "gitRepo" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.GitRepoVolumeSource",
            "description" : "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container."
          },
          "glusterfs" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.GlusterfsVolumeSource",
            "description" : "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md"
          },
          "hostPath" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.HostPathVolumeSource",
            "description" : "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
          },
          "iscsi" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ISCSIVolumeSource",
            "description" : "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md"
          },
          "localDir" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalDirVolumeSource",
            "description" : "LocalDir represents a LocalDir volume that is created by LVM and mounted into the pod"
          },
          "name" : {
            "description" : "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "nfs" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.NFSVolumeSource",
            "description" : "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
          },
          "persistentVolumeClaim" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource",
            "description" : "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          },
          "photonPersistentDisk" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource",
            "description" : "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
          },
          "portworxVolume" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PortworxVolumeSource",
            "description" : "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine"
          },
          "projected" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ProjectedVolumeSource",
            "description" : "Items for all in one resources secrets, configmaps, and downward API"
          },
          "quobyte" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.QuobyteVolumeSource",
            "description" : "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
          },
          "rbd" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.RBDVolumeSource",
            "description" : "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"
          },
          "scaleIO" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ScaleIOVolumeSource",
            "description" : "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
          },
          "secret" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecretVolumeSource",
            "description" : "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
          },
          "storageos" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.StorageOSVolumeSource",
            "description" : "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
          },
          "vsphereVolume" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource",
            "description" : "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.KeyToPath" : {
        "description" : "Maps a string key to a path within a volume.",
        "properties" : {
          "key" : {
            "description" : "The key to project.",
            "type" : "string"
          },
          "mode" : {
            "description" : "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format" : "int32",
            "type" : "integer"
          },
          "path" : {
            "description" : "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "type" : "string"
          }
        },
        "required" : [ "key", "path" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.NodeAffinity" : {
        "description" : "Node affinity is a group of node affinity scheduling rules.",
        "properties" : {
          "preferredDuringSchedulingIgnoredDuringExecution" : {
            "description" : "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PreferredSchedulingTerm"
            },
            "type" : "array"
          },
          "requiredDuringSchedulingIgnoredDuringExecution" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.NodeSelector",
            "description" : "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.GitRepoVolumeSource" : {
        "description" : "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.",
        "properties" : {
          "directory" : {
            "description" : "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "type" : "string"
          },
          "repository" : {
            "description" : "Repository URL",
            "type" : "string"
          },
          "revision" : {
            "description" : "Commit hash for the specified revision.",
            "type" : "string"
          }
        },
        "required" : [ "repository" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ResourceRequirements" : {
        "description" : "ResourceRequirements describes the compute resource requirements.",
        "properties" : {
          "limits" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "type" : "object"
          },
          "requests" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaimTemplate" : {
        "description" : "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation."
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimSpec",
            "description" : "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here."
          }
        },
        "required" : [ "spec" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodAffinity" : {
        "description" : "Pod affinity is a group of inter pod affinity scheduling rules.",
        "properties" : {
          "preferredDuringSchedulingIgnoredDuringExecution" : {
            "description" : "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.WeightedPodAffinityTerm"
            },
            "type" : "array"
          },
          "requiredDuringSchedulingIgnoredDuringExecution" : {
            "description" : "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodAffinityTerm"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector" : {
        "description" : "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
        "properties" : {
          "matchExpressions" : {
            "description" : "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
            },
            "type" : "array"
          },
          "matchLabels" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ConfigMapVolumeSource" : {
        "description" : "Adapts a ConfigMap into a volume.",
        "properties" : {
          "defaultMode" : {
            "description" : "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format" : "int32",
            "type" : "integer"
          },
          "items" : {
            "description" : "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.KeyToPath"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the ConfigMap or its keys must be defined",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodSecurityContext" : {
        "description" : "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
        "properties" : {
          "fsGroup" : {
            "description" : "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:",
            "format" : "int64",
            "type" : "integer"
          },
          "fsGroupChangePolicy" : {
            "description" : "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified defaults to \"Always\".",
            "type" : "string"
          },
          "runAsGroup" : {
            "description" : "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "format" : "int64",
            "type" : "integer"
          },
          "runAsNonRoot" : {
            "description" : "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "type" : "boolean"
          },
          "runAsUser" : {
            "description" : "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "format" : "int64",
            "type" : "integer"
          },
          "seLinuxOptions" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SELinuxOptions",
            "description" : "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
          },
          "seccompProfile" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SeccompProfile",
            "description" : "The seccomp options to use by the containers in this pod."
          },
          "supplementalGroups" : {
            "description" : "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "sysctls" : {
            "description" : "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Sysctl"
            },
            "type" : "array"
          },
          "windowsOptions" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.WindowsSecurityContextOptions",
            "description" : "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Policy" : {
        "description" : "Policy describes a mounting of log Volume and its rotate strategy.",
        "properties" : {
          "logs" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Logs",
            "description" : "Logs describes log Volume and its rotate strategy."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ConfigMapKeySelector" : {
        "description" : "Selects a key from a ConfigMap.",
        "properties" : {
          "key" : {
            "description" : "The key to select.",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the ConfigMap or its key must be defined",
            "type" : "boolean"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.SELinuxOptions" : {
        "description" : "SELinuxOptions are the labels to be applied to the container",
        "properties" : {
          "level" : {
            "description" : "Level is SELinux level label that applies to the container.",
            "type" : "string"
          },
          "role" : {
            "description" : "Role is a SELinux role label that applies to the container.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type is a SELinux type label that applies to the container.",
            "type" : "string"
          },
          "user" : {
            "description" : "User is a SELinux user label that applies to the container.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaimSpec" : {
        "description" : "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
        "properties" : {
          "accessModes" : {
            "description" : "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "dataSource" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.TypedLocalObjectReference",
            "description" : "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change."
          },
          "resources" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceRequirements",
            "description" : "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
          },
          "selector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "A label query over volumes to consider for binding."
          },
          "storageClassName" : {
            "description" : "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "type" : "string"
          },
          "volumeMode" : {
            "description" : "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
            "type" : "string"
          },
          "volumeName" : {
            "description" : "VolumeName is the binding reference to the PersistentVolume backing this claim.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ObjectFieldSelector" : {
        "description" : "ObjectFieldSelector selects an APIVersioned field of an object.",
        "properties" : {
          "apiVersion" : {
            "description" : "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
            "type" : "string"
          },
          "fieldPath" : {
            "description" : "Path of the field to select in the specified API version.",
            "type" : "string"
          }
        },
        "required" : [ "fieldPath" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.RollingUpdateDeployment" : {
        "description" : "Spec to control the desired behavior of rolling update.",
        "properties" : {
          "maxSurge" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
            "description" : "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods."
          },
          "maxUnavailable" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
            "description" : "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods."
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.util.intstr.IntOrString" : {
        "description" : "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
        "format" : "int-or-string",
        "type" : "object"
      },
      "io.k8s.api.core.v1.HTTPHeader" : {
        "description" : "HTTPHeader describes a custom header to be used in HTTP probes",
        "properties" : {
          "name" : {
            "description" : "The header field name",
            "type" : "string"
          },
          "value" : {
            "description" : "The header field value",
            "type" : "string"
          }
        },
        "required" : [ "name", "value" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.DownwardAPIVolumeSource" : {
        "description" : "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
        "properties" : {
          "defaultMode" : {
            "description" : "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format" : "int32",
            "type" : "integer"
          },
          "items" : {
            "description" : "Items is a list of downward API volume file",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.DownwardAPIVolumeFile"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Toleration" : {
        "description" : "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
        "properties" : {
          "effect" : {
            "description" : "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "type" : "string"
          },
          "key" : {
            "description" : "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "type" : "string"
          },
          "operator" : {
            "description" : "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "type" : "string"
          },
          "tolerationSeconds" : {
            "description" : "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "description" : "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.SecretEnvSource" : {
        "description" : "SecretEnvSource selects a Secret to populate the environment variables with.",
        "properties" : {
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the Secret must be defined",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodDNSConfigOption" : {
        "description" : "PodDNSConfigOption defines DNS resolver options of a pod.",
        "properties" : {
          "name" : {
            "description" : "Required.",
            "type" : "string"
          },
          "value" : {
            "description" : "value is the value of the option",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Logs" : {
        "description" : "Logs describes log Volume and its rotate strategy.",
        "properties" : {
          "annotations" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Annotations for log.",
            "type" : "object"
          },
          "rotate" : {
            "description" : "Rotate strategy, including 'Daily' 'Hourly' 'Weekly'.",
            "type" : "string"
          }
        },
        "required" : [ "rotate" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.AzureFileVolumeSource" : {
        "description" : "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
        "properties" : {
          "readOnly" : {
            "description" : "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          },
          "secretName" : {
            "description" : "the name of secret that contains Azure Storage Account Name and Key",
            "type" : "string"
          },
          "shareName" : {
            "description" : "Share Name",
            "type" : "string"
          }
        },
        "required" : [ "secretName", "shareName" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EmptyDirVolumeSource" : {
        "description" : "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
        "properties" : {
          "medium" : {
            "description" : "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "type" : "string"
          },
          "sizeLimit" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity",
            "description" : "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodTemplateSpec" : {
        "description" : "PodTemplateSpec describes the data a pod should have when created from a template",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodSpec",
            "description" : "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.EphemeralContainer" : {
        "description" : "An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.",
        "properties" : {
          "args" : {
            "description" : "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "command" : {
            "description" : "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "env" : {
            "description" : "List of environment variables to set in the container. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EnvVar"
            },
            "type" : "array"
          },
          "envFrom" : {
            "description" : "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EnvFromSource"
            },
            "type" : "array"
          },
          "image" : {
            "description" : "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images",
            "type" : "string"
          },
          "imagePullPolicy" : {
            "description" : "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "type" : "string"
          },
          "lifecycle" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Lifecycle",
            "description" : "Lifecycle is not allowed for ephemeral containers."
          },
          "livenessProbe" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Probe",
            "description" : "Probes are not allowed for ephemeral containers."
          },
          "name" : {
            "description" : "Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.",
            "type" : "string"
          },
          "ports" : {
            "description" : "Ports are not allowed for ephemeral containers.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerPort"
            },
            "type" : "array"
          },
          "readinessProbe" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Probe",
            "description" : "Probes are not allowed for ephemeral containers."
          },
          "resources" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceRequirements",
            "description" : "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod."
          },
          "securityContext" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecurityContext",
            "description" : "SecurityContext is not allowed for ephemeral containers."
          },
          "startupProbe" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Probe",
            "description" : "Probes are not allowed for ephemeral containers."
          },
          "stdin" : {
            "description" : "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "type" : "boolean"
          },
          "stdinOnce" : {
            "description" : "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "type" : "boolean"
          },
          "targetContainerName" : {
            "description" : "If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.",
            "type" : "string"
          },
          "terminationMessagePath" : {
            "description" : "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "type" : "string"
          },
          "terminationMessagePolicy" : {
            "description" : "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "type" : "string"
          },
          "tty" : {
            "description" : "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
            "type" : "boolean"
          },
          "volumeDevices" : {
            "description" : "volumeDevices is the list of block devices to be used by the container.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.VolumeDevice"
            },
            "type" : "array"
          },
          "volumeMounts" : {
            "description" : "Pod volumes to mount into the container's filesystem. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.VolumeMount"
            },
            "type" : "array"
          },
          "workingDir" : {
            "description" : "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.StorageOSVolumeSource" : {
        "description" : "Represents a StorageOS persistent volume resource.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted."
          },
          "volumeName" : {
            "description" : "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
            "type" : "string"
          },
          "volumeNamespace" : {
            "description" : "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ProjectedVolumeSource" : {
        "description" : "Represents a projected volume source",
        "properties" : {
          "defaultMode" : {
            "description" : "Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format" : "int32",
            "type" : "integer"
          },
          "sources" : {
            "description" : "list of volume projections",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.VolumeProjection"
            },
            "type" : "array"
          }
        },
        "required" : [ "sources" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.VolumeMount" : {
        "description" : "VolumeMount describes a mounting of a Volume within a container.",
        "properties" : {
          "extendPathMode" : {
            "description" : "Extend the volume path by appending the pod metadata to the path according to specified  pattern. which provide a way of directory isolation and  help prevent the writing conflict between different pods.",
            "type" : "string"
          },
          "mountPath" : {
            "description" : "Path within the container at which the volume should be mounted.  Must not contain ':'.",
            "type" : "string"
          },
          "mountPropagation" : {
            "description" : "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "type" : "string"
          },
          "name" : {
            "description" : "This must match the Name of a Volume.",
            "type" : "string"
          },
          "policy" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Policy",
            "description" : "VolumeMount Policy."
          },
          "readOnly" : {
            "description" : "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
            "type" : "boolean"
          },
          "subPath" : {
            "description" : "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
            "type" : "string"
          },
          "subPathExpr" : {
            "description" : "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "type" : "string"
          }
        },
        "required" : [ "name", "mountPath" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.FlexVolumeSource" : {
        "description" : "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
        "properties" : {
          "driver" : {
            "description" : "Driver is the name of the driver to use for this volume.",
            "type" : "string"
          },
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
            "type" : "string"
          },
          "options" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Optional: Extra command options if any.",
            "type" : "object"
          },
          "readOnly" : {
            "description" : "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
          }
        },
        "required" : [ "driver" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Capabilities" : {
        "description" : "Adds and removes POSIX capabilities from running containers.",
        "properties" : {
          "add" : {
            "description" : "Added capabilities",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "drop" : {
            "description" : "Removed capabilities",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodDNSConfig" : {
        "description" : "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
        "properties" : {
          "nameservers" : {
            "description" : "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "options" : {
            "description" : "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodDNSConfigOption"
            },
            "type" : "array"
          },
          "searches" : {
            "description" : "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.EnvFromSource" : {
        "description" : "EnvFromSource represents the source of a set of ConfigMaps",
        "properties" : {
          "configMapRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMapEnvSource",
            "description" : "The ConfigMap to select from"
          },
          "prefix" : {
            "description" : "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
            "type" : "string"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecretEnvSource",
            "description" : "The Secret to select from"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PreferredSchedulingTerm" : {
        "description" : "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
        "properties" : {
          "preference" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.NodeSelectorTerm",
            "description" : "A node selector term, associated with the corresponding weight."
          },
          "weight" : {
            "description" : "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "weight", "preference" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.AzureDiskVolumeSource" : {
        "description" : "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
        "properties" : {
          "cachingMode" : {
            "description" : "Host Caching mode: None, Read Only, Read Write.",
            "type" : "string"
          },
          "diskName" : {
            "description" : "The Name of the data disk in the blob storage",
            "type" : "string"
          },
          "diskURI" : {
            "description" : "The URI the data disk in the blob storage",
            "type" : "string"
          },
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type" : "string"
          },
          "kind" : {
            "description" : "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          }
        },
        "required" : [ "diskName", "diskURI" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.LocalObjectReference" : {
        "description" : "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
        "properties" : {
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ExecAction" : {
        "description" : "ExecAction describes a \"run in container\" action.",
        "properties" : {
          "command" : {
            "description" : "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.DownwardAPIProjection" : {
        "description" : "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
        "properties" : {
          "items" : {
            "description" : "Items is a list of DownwardAPIVolume file",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.DownwardAPIVolumeFile"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource" : {
        "description" : "Represents a vSphere volume resource.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type" : "string"
          },
          "storagePolicyID" : {
            "description" : "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
            "type" : "string"
          },
          "storagePolicyName" : {
            "description" : "Storage Policy Based Management (SPBM) profile name.",
            "type" : "string"
          },
          "volumePath" : {
            "description" : "Path that identifies vSphere volume vmdk",
            "type" : "string"
          }
        },
        "required" : [ "volumePath" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ConfigMapProjection" : {
        "description" : "Adapts a ConfigMap into a projected volume.",
        "properties" : {
          "items" : {
            "description" : "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.KeyToPath"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the ConfigMap or its keys must be defined",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.NFSVolumeSource" : {
        "description" : "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
        "properties" : {
          "path" : {
            "description" : "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "type" : "boolean"
          },
          "server" : {
            "description" : "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "type" : "string"
          }
        },
        "required" : [ "server", "path" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.QuobyteVolumeSource" : {
        "description" : "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
        "properties" : {
          "group" : {
            "description" : "Group to map volume access to Default is no group",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
            "type" : "boolean"
          },
          "registry" : {
            "description" : "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
            "type" : "string"
          },
          "tenant" : {
            "description" : "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
            "type" : "string"
          },
          "user" : {
            "description" : "User to map volume access to Defaults to serivceaccount user",
            "type" : "string"
          },
          "volume" : {
            "description" : "Volume is a string that references an already created Quobyte volume by name.",
            "type" : "string"
          }
        },
        "required" : [ "registry", "volume" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Lifecycle" : {
        "description" : "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
        "properties" : {
          "postStart" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Handler",
            "description" : "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
          },
          "preStop" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Handler",
            "description" : "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ScaleIOVolumeSource" : {
        "description" : "ScaleIOVolumeSource represents a persistent ScaleIO volume",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
            "type" : "string"
          },
          "gateway" : {
            "description" : "The host address of the ScaleIO API Gateway.",
            "type" : "string"
          },
          "protectionDomain" : {
            "description" : "The name of the ScaleIO Protection Domain for the configured storage.",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail."
          },
          "sslEnabled" : {
            "description" : "Flag to enable/disable SSL communication with Gateway, default false",
            "type" : "boolean"
          },
          "storageMode" : {
            "description" : "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
            "type" : "string"
          },
          "storagePool" : {
            "description" : "The ScaleIO Storage Pool associated with the protection domain.",
            "type" : "string"
          },
          "system" : {
            "description" : "The name of the storage system as configured in ScaleIO.",
            "type" : "string"
          },
          "volumeName" : {
            "description" : "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
            "type" : "string"
          }
        },
        "required" : [ "gateway", "system", "secretRef" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Sysctl" : {
        "description" : "Sysctl defines a kernel parameter to be set",
        "properties" : {
          "name" : {
            "description" : "Name of a property to set",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of a property to set",
            "type" : "string"
          }
        },
        "required" : [ "name", "value" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.WindowsSecurityContextOptions" : {
        "description" : "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
        "properties" : {
          "gmsaCredentialSpec" : {
            "description" : "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
            "type" : "string"
          },
          "gmsaCredentialSpecName" : {
            "description" : "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
            "type" : "string"
          },
          "runAsUserName" : {
            "description" : "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.TCPSocketAction" : {
        "description" : "TCPSocketAction describes an action based on opening a socket",
        "properties" : {
          "host" : {
            "description" : "Optional: Host name to connect to, defaults to the pod IP.",
            "type" : "string"
          },
          "port" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
            "description" : "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
          }
        },
        "required" : [ "port" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.VolumeProjection" : {
        "description" : "Projection that may be projected along with other supported volume types",
        "properties" : {
          "configMap" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMapProjection",
            "description" : "information about the configMap data to project"
          },
          "downwardAPI" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.DownwardAPIProjection",
            "description" : "information about the downwardAPI data to project"
          },
          "secret" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecretProjection",
            "description" : "information about the secret data to project"
          },
          "serviceAccountToken" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ServiceAccountTokenProjection",
            "description" : "information about the serviceAccountToken data to project"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.FCVolumeSource" : {
        "description" : "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type" : "string"
          },
          "lun" : {
            "description" : "Optional: FC target lun number",
            "format" : "int32",
            "type" : "integer"
          },
          "readOnly" : {
            "description" : "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "type" : "boolean"
          },
          "targetWWNs" : {
            "description" : "Optional: FC target worldwide names (WWNs)",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "wwids" : {
            "description" : "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.SecretProjection" : {
        "description" : "Adapts a secret into a projected volume.",
        "properties" : {
          "items" : {
            "description" : "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.KeyToPath"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the Secret or its key must be defined",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Container" : {
        "description" : "A single application container that you want to run within a pod.",
        "properties" : {
          "args" : {
            "description" : "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "command" : {
            "description" : "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "env" : {
            "description" : "List of environment variables to set in the container. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EnvVar"
            },
            "type" : "array"
          },
          "envFrom" : {
            "description" : "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EnvFromSource"
            },
            "type" : "array"
          },
          "image" : {
            "description" : "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "type" : "string"
          },
          "imagePullPolicy" : {
            "description" : "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "type" : "string"
          },
          "lifecycle" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Lifecycle",
            "description" : "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
          },
          "livenessProbe" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Probe",
            "description" : "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          },
          "name" : {
            "description" : "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "type" : "string"
          },
          "ports" : {
            "description" : "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerPort"
            },
            "type" : "array"
          },
          "readinessProbe" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Probe",
            "description" : "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          },
          "resources" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceRequirements",
            "description" : "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
          },
          "securityContext" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecurityContext",
            "description" : "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
          },
          "startupProbe" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Probe",
            "description" : "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          },
          "stdin" : {
            "description" : "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "type" : "boolean"
          },
          "stdinOnce" : {
            "description" : "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "type" : "boolean"
          },
          "terminationMessagePath" : {
            "description" : "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "type" : "string"
          },
          "terminationMessagePolicy" : {
            "description" : "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "type" : "string"
          },
          "tty" : {
            "description" : "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
            "type" : "boolean"
          },
          "volumeDevices" : {
            "description" : "volumeDevices is the list of block devices to be used by the container.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.VolumeDevice"
            },
            "type" : "array"
          },
          "volumeMounts" : {
            "description" : "Pod volumes to mount into the container's filesystem. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.VolumeMount"
            },
            "type" : "array"
          },
          "workingDir" : {
            "description" : "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource" : {
        "description" : "Represents a Persistent Disk resource in Google Compute Engine.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "type" : "string"
          },
          "partition" : {
            "description" : "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "format" : "int32",
            "type" : "integer"
          },
          "pdName" : {
            "description" : "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "type" : "boolean"
          }
        },
        "required" : [ "pdName" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.CinderVolumeSource" : {
        "description" : "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "type" : "boolean"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "Optional: points to a secret object containing parameters used to connect to OpenStack."
          },
          "volumeID" : {
            "description" : "volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "type" : "string"
          }
        },
        "required" : [ "volumeID" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.TypedLocalObjectReference" : {
        "description" : "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
        "properties" : {
          "apiGroup" : {
            "description" : "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is the type of resource being referenced",
            "type" : "string"
          },
          "name" : {
            "description" : "Name is the name of resource being referenced",
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.HTTPGetAction" : {
        "description" : "HTTPGetAction describes an action based on HTTP Get requests.",
        "properties" : {
          "host" : {
            "description" : "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
            "type" : "string"
          },
          "httpHeaders" : {
            "description" : "Custom headers to set in the request. HTTP allows repeated headers.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.HTTPHeader"
            },
            "type" : "array"
          },
          "path" : {
            "description" : "Path to access on the HTTP server.",
            "type" : "string"
          },
          "port" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
            "description" : "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
          },
          "scheme" : {
            "description" : "Scheme to use for connecting to the host. Defaults to HTTP.",
            "type" : "string"
          }
        },
        "required" : [ "port" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ContainerPort" : {
        "description" : "ContainerPort represents a network port in a single container.",
        "properties" : {
          "containerPort" : {
            "description" : "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
            "format" : "int32",
            "type" : "integer"
          },
          "hostIP" : {
            "description" : "What host IP to bind the external port to.",
            "type" : "string"
          },
          "hostPort" : {
            "description" : "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "description" : "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "type" : "string"
          },
          "protocol" : {
            "description" : "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
            "type" : "string"
          }
        },
        "required" : [ "containerPort" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource" : {
        "description" : "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
        "properties" : {
          "claimName" : {
            "description" : "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "type" : "string"
          },
          "readOnly" : {
            "description" : "Will force the ReadOnly setting in VolumeMounts. Default false.",
            "type" : "boolean"
          }
        },
        "required" : [ "claimName" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.VolumeDevice" : {
        "description" : "volumeDevice describes a mapping of a raw block device within a container.",
        "properties" : {
          "devicePath" : {
            "description" : "devicePath is the path inside of the container that the device will be mapped to.",
            "type" : "string"
          },
          "name" : {
            "description" : "name must match the name of a persistentVolumeClaim in the pod",
            "type" : "string"
          }
        },
        "required" : [ "name", "devicePath" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.NodeSelectorRequirement" : {
        "description" : "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
        "properties" : {
          "key" : {
            "description" : "The label key that the selector applies to.",
            "type" : "string"
          },
          "operator" : {
            "description" : "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "type" : "string"
          },
          "values" : {
            "description" : "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "key", "operator" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.NodeSelectorTerm" : {
        "description" : "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "properties" : {
          "matchExpressions" : {
            "description" : "A list of node selector requirements by node's labels.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.NodeSelectorRequirement"
            },
            "type" : "array"
          },
          "matchFields" : {
            "description" : "A list of node selector requirements by node's fields.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.NodeSelectorRequirement"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodSpec" : {
        "description" : "PodSpec is a description of a pod.",
        "properties" : {
          "activeDeadlineSeconds" : {
            "description" : "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
            "format" : "int64",
            "type" : "integer"
          },
          "affinity" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Affinity",
            "description" : "If specified, the pod's scheduling constraints"
          },
          "automountServiceAccountToken" : {
            "description" : "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
            "type" : "boolean"
          },
          "containers" : {
            "description" : "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Container"
            },
            "type" : "array"
          },
          "dnsConfig" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodDNSConfig",
            "description" : "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy."
          },
          "dnsPolicy" : {
            "description" : "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
            "type" : "string"
          },
          "enableServiceLinks" : {
            "description" : "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.",
            "type" : "boolean"
          },
          "ephemeralContainers" : {
            "description" : "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.EphemeralContainer"
            },
            "type" : "array"
          },
          "hostAliases" : {
            "description" : "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.HostAlias"
            },
            "type" : "array"
          },
          "hostIPC" : {
            "description" : "Use the host's ipc namespace. Optional: Default to false.",
            "type" : "boolean"
          },
          "hostNetwork" : {
            "description" : "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
            "type" : "boolean"
          },
          "hostPID" : {
            "description" : "Use the host's pid namespace. Optional: Default to false.",
            "type" : "boolean"
          },
          "hostname" : {
            "description" : "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
            "type" : "string"
          },
          "imagePullSecrets" : {
            "description" : "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference"
            },
            "type" : "array"
          },
          "initContainers" : {
            "description" : "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Container"
            },
            "type" : "array"
          },
          "nodeName" : {
            "description" : "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
            "type" : "string"
          },
          "nodeSelector" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
            "type" : "object"
          },
          "overhead" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature.",
            "type" : "object"
          },
          "preemptionPolicy" : {
            "description" : "PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate.",
            "type" : "string"
          },
          "priority" : {
            "description" : "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
            "format" : "int32",
            "type" : "integer"
          },
          "priorityClassName" : {
            "description" : "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
            "type" : "string"
          },
          "readinessGates" : {
            "description" : "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodReadinessGate"
            },
            "type" : "array"
          },
          "restartPolicy" : {
            "description" : "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
            "type" : "string"
          },
          "runtimeClassName" : {
            "description" : "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.",
            "type" : "string"
          },
          "schedulerName" : {
            "description" : "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
            "type" : "string"
          },
          "securityContext" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodSecurityContext",
            "description" : "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field."
          },
          "serviceAccount" : {
            "description" : "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
            "type" : "string"
          },
          "serviceAccountName" : {
            "description" : "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "type" : "string"
          },
          "setHostnameAsFQDN" : {
            "description" : "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false.",
            "type" : "boolean"
          },
          "shareProcessNamespace" : {
            "description" : "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.",
            "type" : "boolean"
          },
          "subdomain" : {
            "description" : "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all.",
            "type" : "string"
          },
          "terminationGracePeriodSeconds" : {
            "description" : "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "tolerations" : {
            "description" : "If specified, the pod's tolerations.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Toleration"
            },
            "type" : "array"
          },
          "topologySpreadConstraints" : {
            "description" : "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.TopologySpreadConstraint"
            },
            "type" : "array"
          },
          "volumes" : {
            "description" : "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Volume"
            },
            "type" : "array"
          }
        },
        "required" : [ "containers" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Affinity" : {
        "description" : "Affinity is a group of affinity scheduling rules.",
        "properties" : {
          "nodeAffinity" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.NodeAffinity",
            "description" : "Describes node affinity scheduling rules for the pod."
          },
          "podAffinity" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodAffinity",
            "description" : "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
          },
          "podAntiAffinity" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodAntiAffinity",
            "description" : "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.SecurityContext" : {
        "description" : "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
        "properties" : {
          "allowPrivilegeEscalation" : {
            "description" : "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "type" : "boolean"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.Capabilities",
            "description" : "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime."
          },
          "privileged" : {
            "description" : "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "type" : "boolean"
          },
          "procMount" : {
            "description" : "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "type" : "string"
          },
          "readOnlyRootFilesystem" : {
            "description" : "Whether this container has a read-only root filesystem. Default is false.",
            "type" : "boolean"
          },
          "runAsGroup" : {
            "description" : "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "format" : "int64",
            "type" : "integer"
          },
          "runAsNonRoot" : {
            "description" : "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "type" : "boolean"
          },
          "runAsUser" : {
            "description" : "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "format" : "int64",
            "type" : "integer"
          },
          "seLinuxOptions" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SELinuxOptions",
            "description" : "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
          },
          "seccompProfile" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SeccompProfile",
            "description" : "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options."
          },
          "windowsOptions" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.WindowsSecurityContextOptions",
            "description" : "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.WeightedPodAffinityTerm" : {
        "description" : "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
        "properties" : {
          "podAffinityTerm" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodAffinityTerm",
            "description" : "Required. A pod affinity term, associated with the corresponding weight."
          },
          "weight" : {
            "description" : "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "weight", "podAffinityTerm" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource" : {
        "description" : "Represents a Photon Controller persistent disk resource.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "type" : "string"
          },
          "pdID" : {
            "description" : "ID that identifies Photon Controller persistent disk",
            "type" : "string"
          }
        },
        "required" : [ "pdID" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.TopologySpreadConstraint" : {
        "description" : "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
        "properties" : {
          "labelSelector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain."
          },
          "maxSkew" : {
            "description" : "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
            "format" : "int32",
            "type" : "integer"
          },
          "topologyKey" : {
            "description" : "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. It's a required field.",
            "type" : "string"
          },
          "whenUnsatisfiable" : {
            "description" : "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,",
            "type" : "string"
          }
        },
        "required" : [ "maxSkew", "topologyKey", "whenUnsatisfiable" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.DeploymentStatus" : {
        "description" : "DeploymentStatus is the most recently observed status of the Deployment.",
        "properties" : {
          "availableReplicas" : {
            "description" : "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
            "format" : "int32",
            "type" : "integer"
          },
          "collisionCount" : {
            "description" : "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
            "format" : "int32",
            "type" : "integer"
          },
          "conditions" : {
            "description" : "Represents the latest available observations of a deployment's current state.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.apps.v1.DeploymentCondition"
            },
            "type" : "array"
          },
          "observedGeneration" : {
            "description" : "The generation observed by the deployment controller.",
            "format" : "int64",
            "type" : "integer"
          },
          "readyReplicas" : {
            "description" : "Total number of ready pods targeted by this deployment.",
            "format" : "int32",
            "type" : "integer"
          },
          "replicas" : {
            "description" : "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
            "format" : "int32",
            "type" : "integer"
          },
          "unavailableReplicas" : {
            "description" : "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
            "format" : "int32",
            "type" : "integer"
          },
          "updatedReplicas" : {
            "description" : "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodReadinessGate" : {
        "description" : "PodReadinessGate contains the reference to a pod condition",
        "properties" : {
          "conditionType" : {
            "description" : "ConditionType refers to a condition in the pod's condition list with matching type.",
            "type" : "string"
          }
        },
        "required" : [ "conditionType" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Probe" : {
        "description" : "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
        "properties" : {
          "exec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ExecAction",
            "description" : "One and only one of the following should be specified. Exec specifies the action to take."
          },
          "failureThreshold" : {
            "description" : "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
            "format" : "int32",
            "type" : "integer"
          },
          "httpGet" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.HTTPGetAction",
            "description" : "HTTPGet specifies the http request to perform."
          },
          "initialDelaySeconds" : {
            "description" : "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "format" : "int32",
            "type" : "integer"
          },
          "periodSeconds" : {
            "description" : "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
            "format" : "int32",
            "type" : "integer"
          },
          "successThreshold" : {
            "description" : "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "format" : "int32",
            "type" : "integer"
          },
          "tcpSocket" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.TCPSocketAction",
            "description" : "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported"
          },
          "timeoutSeconds" : {
            "description" : "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.LocalDirVolumeSource" : {
        "description" : "LocalDir represents a LocalDir volume that is created by LVM and mounted into the pod",
        "properties" : {
          "sizeLimit" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.apps.v1.Deployment" : {
        "description" : "Deployment enables declarative updates for Pods and ReplicaSets.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object metadata."
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.DeploymentSpec",
            "description" : "Specification of the desired behavior of the Deployment."
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.DeploymentStatus",
            "description" : "Most recently observed status of the Deployment."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource" : {
        "description" : "Represents a Persistent Disk resource in AWS.",
        "properties" : {
          "fsType" : {
            "description" : "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "type" : "string"
          },
          "partition" : {
            "description" : "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "format" : "int32",
            "type" : "integer"
          },
          "readOnly" : {
            "description" : "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "type" : "boolean"
          },
          "volumeID" : {
            "description" : "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "type" : "string"
          }
        },
        "required" : [ "volumeID" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.DeploymentSpec" : {
        "description" : "DeploymentSpec is the specification of the desired behavior of the Deployment.",
        "properties" : {
          "minReadySeconds" : {
            "description" : "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
            "format" : "int32",
            "type" : "integer"
          },
          "paused" : {
            "description" : "Indicates that the deployment is paused.",
            "type" : "boolean"
          },
          "progressDeadlineSeconds" : {
            "description" : "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
            "format" : "int32",
            "type" : "integer"
          },
          "replicas" : {
            "description" : "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
            "format" : "int32",
            "type" : "integer"
          },
          "revisionHistoryLimit" : {
            "description" : "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
            "format" : "int32",
            "type" : "integer"
          },
          "selector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels."
          },
          "strategy" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.DeploymentStrategy",
            "description" : "The deployment strategy to use to replace existing pods with new ones."
          },
          "template" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodTemplateSpec",
            "description" : "Template describes the pods that will be created."
          }
        },
        "required" : [ "selector", "template" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ISCSIVolumeSource" : {
        "description" : "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
        "properties" : {
          "chapAuthDiscovery" : {
            "description" : "whether support iSCSI Discovery CHAP authentication",
            "type" : "boolean"
          },
          "chapAuthSession" : {
            "description" : "whether support iSCSI Session CHAP authentication",
            "type" : "boolean"
          },
          "fsType" : {
            "description" : "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
            "type" : "string"
          },
          "initiatorName" : {
            "description" : "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "type" : "string"
          },
          "iqn" : {
            "description" : "Target iSCSI Qualified Name.",
            "type" : "string"
          },
          "iscsiInterface" : {
            "description" : "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
            "type" : "string"
          },
          "lun" : {
            "description" : "iSCSI Target Lun number.",
            "format" : "int32",
            "type" : "integer"
          },
          "portals" : {
            "description" : "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "readOnly" : {
            "description" : "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
            "type" : "boolean"
          },
          "secretRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LocalObjectReference",
            "description" : "CHAP Secret for iSCSI target and initiator authentication"
          },
          "targetPortal" : {
            "description" : "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "type" : "string"
          }
        },
        "required" : [ "targetPortal", "iqn", "lun" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.DeploymentCondition" : {
        "description" : "DeploymentCondition describes the state of a deployment at a certain point.",
        "properties" : {
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time the condition transitioned from one status to another."
          },
          "lastUpdateTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "The last time this condition was updated."
          },
          "message" : {
            "description" : "A human readable message indicating details about the transition.",
            "type" : "string"
          },
          "reason" : {
            "description" : "The reason for the condition's last transition.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the condition, one of True, False, Unknown.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of deployment condition.",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.SecretKeySelector" : {
        "description" : "SecretKeySelector selects a key of a Secret.",
        "properties" : {
          "key" : {
            "description" : "The key of the secret to select from.  Must be a valid secret key.",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "type" : "string"
          },
          "optional" : {
            "description" : "Specify whether the Secret or its key must be defined",
            "type" : "boolean"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.HostAlias" : {
        "description" : "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
        "properties" : {
          "hostnames" : {
            "description" : "Hostnames for the above IP address.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "ip" : {
            "description" : "IP address of the host file entry.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.batch.v1beta1.CronJobList" : {
        "description" : "CronJobList is a collection of cron jobs.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "items is the list of CronJobs.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.batch.v1beta1.CronJob"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.batch.v1beta1.CronJobSpec" : {
        "description" : "CronJobSpec describes how the job execution will look like and when it will actually run.",
        "properties" : {
          "concurrencyPolicy" : {
            "description" : "Specifies how to treat concurrent executions of a Job. Valid values are: - \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one",
            "type" : "string"
          },
          "failedJobsHistoryLimit" : {
            "description" : "The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
            "format" : "int32",
            "type" : "integer"
          },
          "jobTemplate" : {
            "$ref" : "#/components/schemas/io.k8s.api.batch.v1beta1.JobTemplateSpec",
            "description" : "Specifies the job that will be created when executing a CronJob."
          },
          "schedule" : {
            "description" : "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.",
            "type" : "string"
          },
          "startingDeadlineSeconds" : {
            "description" : "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.",
            "format" : "int64",
            "type" : "integer"
          },
          "successfulJobsHistoryLimit" : {
            "description" : "The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.",
            "format" : "int32",
            "type" : "integer"
          },
          "suspend" : {
            "description" : "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.",
            "type" : "boolean"
          }
        },
        "required" : [ "schedule", "jobTemplate" ],
        "type" : "object"
      },
      "io.k8s.api.batch.v1beta1.CronJobStatus" : {
        "description" : "CronJobStatus represents the current state of a cron job.",
        "properties" : {
          "active" : {
            "description" : "A list of pointers to currently running jobs.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ObjectReference"
            },
            "type" : "array"
          },
          "lastScheduleTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Information when was the last time the job was successfully scheduled."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.batch.v1beta1.JobTemplateSpec" : {
        "description" : "JobTemplateSpec describes the data a Job should have when created from a template",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.batch.v1.JobSpec",
            "description" : "Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.batch.v1.JobSpec" : {
        "description" : "JobSpec describes how the job execution will look like.",
        "properties" : {
          "activeDeadlineSeconds" : {
            "description" : "Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer",
            "format" : "int64",
            "type" : "integer"
          },
          "backoffLimit" : {
            "description" : "Specifies the number of retries before marking this job failed. Defaults to 6",
            "format" : "int32",
            "type" : "integer"
          },
          "completions" : {
            "description" : "Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "format" : "int32",
            "type" : "integer"
          },
          "manualSelector" : {
            "description" : "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector",
            "type" : "boolean"
          },
          "parallelism" : {
            "description" : "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "format" : "int32",
            "type" : "integer"
          },
          "selector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
          },
          "template" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodTemplateSpec",
            "description" : "Describes the pod that will be created when executing a job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
          },
          "ttlSecondsAfterFinished" : {
            "description" : "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "template" ],
        "type" : "object"
      },
      "io.k8s.api.batch.v1beta1.CronJob" : {
        "description" : "CronJob represents the configuration of a single cron job.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.batch.v1beta1.CronJobSpec",
            "description" : "Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.batch.v1beta1.CronJobStatus",
            "description" : "Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.LoadBalancerStatus" : {
        "description" : "LoadBalancerStatus represents the status of a load-balancer.",
        "properties" : {
          "ingress" : {
            "description" : "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.LoadBalancerIngress"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ServiceSpec" : {
        "description" : "ServiceSpec describes the attributes that a user creates on a service.",
        "properties" : {
          "clusterIP" : {
            "description" : "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type" : "string"
          },
          "externalIPs" : {
            "description" : "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "externalName" : {
            "description" : "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.",
            "type" : "string"
          },
          "externalTrafficPolicy" : {
            "description" : "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \"Local\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \"Cluster\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
            "type" : "string"
          },
          "healthCheckNodePort" : {
            "description" : "healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
            "format" : "int32",
            "type" : "integer"
          },
          "ipFamily" : {
            "description" : "ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6) when the IPv6DualStack feature gate is enabled. In a dual-stack cluster, you can specify ipFamily when creating a ClusterIP Service to determine whether the controller will allocate an IPv4 or IPv6 IP for it, and you can specify ipFamily when creating a headless Service to determine whether it will have IPv4 or IPv6 Endpoints. In either case, if you do not specify an ipFamily explicitly, it will default to the cluster's primary IP family. This field is part of an alpha feature, and you should not make any assumptions about its semantics other than those described above. In particular, you should not assume that it can (or cannot) be changed after creation time; that it can only have the values \"IPv4\" and \"IPv6\"; or that its current value on a given Service correctly reflects the current state of that Service. (For ClusterIP Services, look at clusterIP to see if the Service is IPv4 or IPv6. For headless Services, look at the endpoints, which may be dual-stack in the future. For ExternalName Services, ipFamily has no meaning, but it may be set to an irrelevant value anyway.)",
            "type" : "string"
          },
          "loadBalancerIP" : {
            "description" : "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "type" : "string"
          },
          "loadBalancerSourceRanges" : {
            "description" : "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "ports" : {
            "description" : "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ServicePort"
            },
            "type" : "array"
          },
          "publishNotReadyAddresses" : {
            "description" : "publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered \"ready\" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.",
            "type" : "boolean"
          },
          "selector" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "type" : "object"
          },
          "sessionAffinity" : {
            "description" : "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "type" : "string"
          },
          "sessionAffinityConfig" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.SessionAffinityConfig",
            "description" : "sessionAffinityConfig contains the configurations of session affinity."
          },
          "topologyKeys" : {
            "description" : "topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value \"*\" may be used to mean \"any topology\". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ServiceStatus" : {
        "description" : "ServiceStatus represents the current status of a service.",
        "properties" : {
          "loadBalancer" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LoadBalancerStatus",
            "description" : "LoadBalancer contains the current status of the load-balancer, if one is present."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.LoadBalancerIngress" : {
        "description" : "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
        "properties" : {
          "hostname" : {
            "description" : "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
            "type" : "string"
          },
          "ip" : {
            "description" : "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Service" : {
        "description" : "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ServiceSpec",
            "description" : "Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ServiceStatus",
            "description" : "Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ServicePort" : {
        "description" : "ServicePort contains information on service's port.",
        "properties" : {
          "appProtocol" : {
            "description" : "The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. This is a beta field that is guarded by the ServiceAppProtocol feature gate and enabled by default.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
            "type" : "string"
          },
          "nodePort" : {
            "description" : "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "format" : "int32",
            "type" : "integer"
          },
          "port" : {
            "description" : "The port that will be exposed by this service.",
            "format" : "int32",
            "type" : "integer"
          },
          "protocol" : {
            "description" : "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
            "type" : "string"
          },
          "targetPort" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
            "description" : "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"
          }
        },
        "required" : [ "port" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.SessionAffinityConfig" : {
        "description" : "SessionAffinityConfig represents the configurations of session affinity.",
        "properties" : {
          "clientIP" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ClientIPConfig",
            "description" : "clientIP contains the configurations of Client IP based session affinity."
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Patch" : {
        "description" : "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
        "type" : "object"
      },
      "io.k8s.api.core.v1.ClientIPConfig" : {
        "description" : "ClientIPConfig represents the configurations of Client IP based session affinity.",
        "properties" : {
          "timeoutSeconds" : {
            "description" : "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList" : {
        "description" : "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "groupVersion" : {
            "description" : "groupVersion is the group and version this APIResourceList is for.",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "resources" : {
            "description" : "resources contains the name of the resources and if they are namespaced.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
            },
            "type" : "array"
          }
        },
        "required" : [ "groupVersion", "resources" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource" : {
        "description" : "APIResource specifies the name of a resource and whether it is namespaced.",
        "properties" : {
          "categories" : {
            "description" : "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "group" : {
            "description" : "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
            "type" : "string"
          },
          "kind" : {
            "description" : "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
            "type" : "string"
          },
          "name" : {
            "description" : "name is the plural name of the resource.",
            "type" : "string"
          },
          "namespaced" : {
            "description" : "namespaced indicates if a resource is namespaced or not.",
            "type" : "boolean"
          },
          "shortNames" : {
            "description" : "shortNames is a list of suggested short names of the resource.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "singularName" : {
            "description" : "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
            "type" : "string"
          },
          "storageVersionHash" : {
            "description" : "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
            "type" : "string"
          },
          "verbs" : {
            "description" : "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "version" : {
            "description" : "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
            "type" : "string"
          }
        },
        "required" : [ "name", "singularName", "namespaced", "kind", "verbs" ],
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.ClusterRoleList" : {
        "description" : "ClusterRoleList is a collection of ClusterRoles",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is a list of ClusterRoles",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.ClusterRole"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard object's metadata."
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.ClusterRole" : {
        "description" : "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
        "properties" : {
          "aggregationRule" : {
            "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.AggregationRule",
            "description" : "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller."
          },
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata."
          },
          "rules" : {
            "description" : "Rules holds all the PolicyRules for this ClusterRole",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.PolicyRule"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.AggregationRule" : {
        "description" : "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole",
        "properties" : {
          "clusterRoleSelectors" : {
            "description" : "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.PolicyRule" : {
        "description" : "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
        "properties" : {
          "apiGroups" : {
            "description" : "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "nonResourceURLs" : {
            "description" : "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "resourceNames" : {
            "description" : "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "resources" : {
            "description" : "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "verbs" : {
            "description" : "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "verbs" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.DeploymentList" : {
        "description" : "DeploymentList is a list of Deployments.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is the list of Deployments.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata."
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.Subject" : {
        "description" : "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
        "properties" : {
          "apiGroup" : {
            "description" : "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the object being referenced.",
            "type" : "string"
          },
          "namespace" : {
            "description" : "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.RoleBinding" : {
        "description" : "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata."
          },
          "roleRef" : {
            "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleRef",
            "description" : "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error."
          },
          "subjects" : {
            "description" : "Subjects holds references to the objects the role applies to.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.Subject"
            },
            "type" : "array"
          }
        },
        "required" : [ "roleRef" ],
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.RoleBindingList" : {
        "description" : "RoleBindingList is a collection of RoleBindings",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is a list of RoleBindings",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard object's metadata."
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.rbac.v1.RoleRef" : {
        "description" : "RoleRef contains information that points to the role being used",
        "properties" : {
          "apiGroup" : {
            "description" : "APIGroup is the group for the resource being referenced",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is the type of resource being referenced",
            "type" : "string"
          },
          "name" : {
            "description" : "Name is the name of resource being referenced",
            "type" : "string"
          }
        },
        "required" : [ "apiGroup", "kind", "name" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodIP" : {
        "description" : "IP address information for entries in the (plural) PodIPs field. Each entry includes:",
        "properties" : {
          "ip" : {
            "description" : "ip is an IP address (IPv4 or IPv6) assigned to the pod",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodStatus" : {
        "description" : "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.",
        "properties" : {
          "conditions" : {
            "description" : "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodCondition"
            },
            "type" : "array"
          },
          "containerStatuses" : {
            "description" : "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerStatus"
            },
            "type" : "array"
          },
          "ephemeralContainerStatuses" : {
            "description" : "Status for any ephemeral containers that have run in this pod. This field is alpha-level and is only populated by servers that enable the EphemeralContainers feature.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerStatus"
            },
            "type" : "array"
          },
          "hostIP" : {
            "description" : "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
            "type" : "string"
          },
          "initContainerStatuses" : {
            "description" : "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerStatus"
            },
            "type" : "array"
          },
          "message" : {
            "description" : "A human readable message indicating details about why the pod is in this condition.",
            "type" : "string"
          },
          "nominatedNodeName" : {
            "description" : "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.",
            "type" : "string"
          },
          "phase" : {
            "description" : "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:",
            "type" : "string"
          },
          "podIP" : {
            "description" : "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
            "type" : "string"
          },
          "podIPs" : {
            "description" : "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodIP"
            },
            "type" : "array"
          },
          "qosClass" : {
            "description" : "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md",
            "type" : "string"
          },
          "reason" : {
            "description" : "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ContainerState" : {
        "description" : "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
        "properties" : {
          "running" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerStateRunning",
            "description" : "Details about a running container"
          },
          "terminated" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerStateTerminated",
            "description" : "Details about a terminated container"
          },
          "waiting" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerStateWaiting",
            "description" : "Details about a waiting container"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Pod" : {
        "description" : "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodSpec",
            "description" : "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodStatus",
            "description" : "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ContainerStateWaiting" : {
        "description" : "ContainerStateWaiting is a waiting state of a container.",
        "properties" : {
          "message" : {
            "description" : "Message regarding why the container is not yet running.",
            "type" : "string"
          },
          "reason" : {
            "description" : "(brief) reason the container is not yet running.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ContainerStatus" : {
        "description" : "ContainerStatus contains details for the current status of this container.",
        "properties" : {
          "containerID" : {
            "description" : "Container's ID in the format 'docker://<container_id>'.",
            "type" : "string"
          },
          "image" : {
            "description" : "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images",
            "type" : "string"
          },
          "imageID" : {
            "description" : "ImageID of the container's image.",
            "type" : "string"
          },
          "lastState" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerState",
            "description" : "Details about the container's last termination condition."
          },
          "name" : {
            "description" : "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
            "type" : "string"
          },
          "ready" : {
            "description" : "Specifies whether the container has passed its readiness probe.",
            "type" : "boolean"
          },
          "restartCount" : {
            "description" : "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.",
            "format" : "int32",
            "type" : "integer"
          },
          "started" : {
            "description" : "Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.",
            "type" : "boolean"
          },
          "state" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ContainerState",
            "description" : "Details about the container's current condition."
          }
        },
        "required" : [ "name", "ready", "restartCount", "image", "imageID" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodCondition" : {
        "description" : "PodCondition contains details for the current condition of this pod.",
        "properties" : {
          "lastProbeTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time we probed the condition."
          },
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time the condition transitioned from one status to another."
          },
          "message" : {
            "description" : "Human-readable message indicating details about last transition.",
            "type" : "string"
          },
          "reason" : {
            "description" : "Unique, one-word, CamelCase reason for the condition's last transition.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
            "type" : "string"
          },
          "type" : {
            "description" : "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ContainerStateTerminated" : {
        "description" : "ContainerStateTerminated is a terminated state of a container.",
        "properties" : {
          "containerID" : {
            "description" : "Container's ID in the format 'docker://<container_id>'",
            "type" : "string"
          },
          "exitCode" : {
            "description" : "Exit status from the last termination of the container",
            "format" : "int32",
            "type" : "integer"
          },
          "finishedAt" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Time at which the container last terminated"
          },
          "message" : {
            "description" : "Message regarding the last termination of the container",
            "type" : "string"
          },
          "reason" : {
            "description" : "(brief) reason from the last termination of the container",
            "type" : "string"
          },
          "signal" : {
            "description" : "Signal from the last termination of the container",
            "format" : "int32",
            "type" : "integer"
          },
          "startedAt" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Time at which previous execution of the container started"
          }
        },
        "required" : [ "exitCode" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ContainerStateRunning" : {
        "description" : "ContainerStateRunning is a running state of a container.",
        "properties" : {
          "startedAt" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Time at which the container was last (re-)started"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PodList" : {
        "description" : "PodList is a list of Pods.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of pods. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy" : {
        "description" : "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.",
        "properties" : {
          "partition" : {
            "description" : "Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.apps.v1.StatefulSetUpdateStrategy" : {
        "description" : "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.",
        "properties" : {
          "rollingUpdate" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy",
            "description" : "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType."
          },
          "type" : {
            "description" : "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaim" : {
        "description" : "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimSpec",
            "description" : "Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimStatus",
            "description" : "Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.apps.v1.StatefulSetStatus" : {
        "description" : "StatefulSetStatus represents the current state of a StatefulSet.",
        "properties" : {
          "collisionCount" : {
            "description" : "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.",
            "format" : "int32",
            "type" : "integer"
          },
          "conditions" : {
            "description" : "Represents the latest available observations of a statefulset's current state.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSetCondition"
            },
            "type" : "array"
          },
          "currentReplicas" : {
            "description" : "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.",
            "format" : "int32",
            "type" : "integer"
          },
          "currentRevision" : {
            "description" : "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).",
            "type" : "string"
          },
          "observedGeneration" : {
            "description" : "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.",
            "format" : "int64",
            "type" : "integer"
          },
          "readyReplicas" : {
            "description" : "readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.",
            "format" : "int32",
            "type" : "integer"
          },
          "replicas" : {
            "description" : "replicas is the number of Pods created by the StatefulSet controller.",
            "format" : "int32",
            "type" : "integer"
          },
          "updateRevision" : {
            "description" : "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)",
            "type" : "string"
          },
          "updatedReplicas" : {
            "description" : "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "replicas" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaimCondition" : {
        "description" : "PersistentVolumeClaimCondition contails details about state of pvc",
        "properties" : {
          "lastProbeTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time we probed the condition."
          },
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time the condition transitioned from one status to another."
          },
          "message" : {
            "description" : "Human-readable message indicating details about last transition.",
            "type" : "string"
          },
          "reason" : {
            "description" : "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
            "type" : "string"
          },
          "status" : {
            "description" : "status is the status of the condition.",
            "type" : "string"
          },
          "type" : {
            "description" : "type is the type of the condition.",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.StatefulSetSpec" : {
        "description" : "A StatefulSetSpec is the specification of a StatefulSet.",
        "properties" : {
          "podManagementPolicy" : {
            "description" : "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.",
            "type" : "string"
          },
          "replicas" : {
            "description" : "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
            "format" : "int32",
            "type" : "integer"
          },
          "revisionHistoryLimit" : {
            "description" : "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.",
            "format" : "int32",
            "type" : "integer"
          },
          "selector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
          },
          "serviceName" : {
            "description" : "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller.",
            "type" : "string"
          },
          "template" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodTemplateSpec",
            "description" : "template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet."
          },
          "updateStrategy" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSetUpdateStrategy",
            "description" : "updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template."
          },
          "volumeClaimTemplates" : {
            "description" : "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
            },
            "type" : "array"
          }
        },
        "required" : [ "selector", "template", "serviceName" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.StatefulSetCondition" : {
        "description" : "StatefulSetCondition describes the state of a statefulset at a certain point.",
        "properties" : {
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time the condition transitioned from one status to another."
          },
          "message" : {
            "description" : "A human readable message indicating details about the transition.",
            "type" : "string"
          },
          "reason" : {
            "description" : "The reason for the condition's last transition.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the condition, one of True, False, Unknown.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of statefulset condition.",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.StatefulSet" : {
        "description" : "StatefulSet represents a set of pods with consistent identities. Identities are defined as:",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec",
            "description" : "Spec defines the desired identities of pods in this set."
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSetStatus",
            "description" : "Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaimStatus" : {
        "description" : "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
        "properties" : {
          "accessModes" : {
            "description" : "AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "capacity" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "Represents the actual resources of the underlying volume.",
            "type" : "object"
          },
          "conditions" : {
            "description" : "Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
            },
            "type" : "array"
          },
          "phase" : {
            "description" : "Phase represents the current phase of PersistentVolumeClaim.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.cci.v1beta1.NetworkSubnet" : {
        "description" : "NetworkSubnet describes the subnet of a network",
        "properties" : {
          "cidr" : {
            "description" : "The CIDR of the network",
            "type" : "string"
          },
          "networkID" : {
            "description" : "NetworkID describes the subnet network id",
            "type" : "string"
          },
          "subnetID" : {
            "description" : "SubnetID describes the subnet id",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.cci.v1beta1.NetworkStatus" : {
        "description" : "NetworkStatus describes the status of a network",
        "properties" : {
          "message" : {
            "description" : "Message describes why network is in current state",
            "type" : "string"
          },
          "state" : {
            "description" : "State describes the network state",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.cci.v1beta1.Network" : {
        "description" : "Network is a network resource in container.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.NetworkSpec",
            "description" : "Spec defines the attributes on a network"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.NetworkStatus",
            "description" : "Status describes the network status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.cci.v1beta1.NetworkSpec" : {
        "description" : "NetworkSpec describes the attributes on a network resource.",
        "properties" : {
          "attachedVPC" : {
            "description" : "ID of the VPC to attach",
            "type" : "string"
          },
          "availableZone" : {
            "description" : "available zone",
            "type" : "string"
          },
          "cidr" : {
            "description" : "The CIDR of the network",
            "type" : "string"
          },
          "networkID" : {
            "description" : "network ID",
            "type" : "string"
          },
          "networkType" : {
            "description" : "network type like 'overlay_l2'",
            "type" : "string"
          },
          "subnetID" : {
            "description" : "Subnet ID",
            "type" : "string"
          },
          "subnets" : {
            "description" : "Subnets",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.NetworkSubnet"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.autoscaling.v1.ScaleSpec" : {
        "description" : "ScaleSpec describes the attributes of a scale subresource.",
        "properties" : {
          "replicas" : {
            "description" : "desired number of instances for the scaled object.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.autoscaling.v1.ScaleStatus" : {
        "description" : "ScaleStatus represents the current status of a scale subresource.",
        "properties" : {
          "replicas" : {
            "description" : "actual number of observed instances of the scaled object.",
            "format" : "int32",
            "type" : "integer"
          },
          "selector" : {
            "description" : "label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors",
            "type" : "string"
          }
        },
        "required" : [ "replicas" ],
        "type" : "object"
      },
      "io.k8s.api.autoscaling.v1.Scale" : {
        "description" : "Scale represents a scaling request for a resource.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.ScaleSpec",
            "description" : "defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.ScaleStatus",
            "description" : "current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only."
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions" : {
        "description" : "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "serverAddressByClientCIDRs" : {
            "description" : "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
            },
            "type" : "array"
          },
          "versions" : {
            "description" : "versions are the api versions that are available.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "versions", "serverAddressByClientCIDRs" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList" : {
        "description" : "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "groups" : {
            "description" : "groups is a list of APIGroup.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          }
        },
        "required" : [ "groups" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EndpointsList" : {
        "description" : "EndpointsList is a list of endpoints.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of endpoints.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.NamespaceCondition" : {
        "description" : "NamespaceCondition contains details about state of namespace.",
        "properties" : {
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          },
          "message" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the condition, one of True, False, Unknown.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of namespace controller condition.",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.NamespaceSpec" : {
        "description" : "NamespaceSpec describes the attributes on a Namespace.",
        "properties" : {
          "finalizers" : {
            "description" : "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.NamespaceList" : {
        "description" : "NamespaceList is a list of Namespaces.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Namespace"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.NamespaceStatus" : {
        "description" : "NamespaceStatus is information about the current status of a Namespace.",
        "properties" : {
          "conditions" : {
            "description" : "Represents the latest available observations of a namespace's current state.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.NamespaceCondition"
            },
            "type" : "array"
          },
          "phase" : {
            "description" : "Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Namespace" : {
        "description" : "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.NamespaceSpec",
            "description" : "Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.NamespaceStatus",
            "description" : "Status describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.batch.v1.JobCondition" : {
        "description" : "JobCondition describes current state of a job.",
        "properties" : {
          "lastProbeTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time the condition was checked."
          },
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Last time the condition transit from one status to another."
          },
          "message" : {
            "description" : "Human readable message indicating details about last transition.",
            "type" : "string"
          },
          "reason" : {
            "description" : "(brief) reason for the condition's last transition.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the condition, one of True, False, Unknown.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of job condition, Complete or Failed.",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.batch.v1.Job" : {
        "description" : "Job represents the configuration of a single job.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.batch.v1.JobSpec",
            "description" : "Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.batch.v1.JobStatus",
            "description" : "Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.batch.v1.JobStatus" : {
        "description" : "JobStatus represents the current state of a Job.",
        "properties" : {
          "active" : {
            "description" : "The number of actively running pods.",
            "format" : "int32",
            "type" : "integer"
          },
          "completionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC."
          },
          "conditions" : {
            "description" : "The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.batch.v1.JobCondition"
            },
            "type" : "array"
          },
          "failed" : {
            "description" : "The number of pods which reached phase Failed.",
            "format" : "int32",
            "type" : "integer"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC."
          },
          "succeeded" : {
            "description" : "The number of pods which reached phase Succeeded.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.SecretList" : {
        "description" : "SecretList is a list of Secret.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.Secret" : {
        "description" : "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "data" : {
            "additionalProperties" : {
              "format" : "byte",
              "type" : "string"
            },
            "description" : "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
            "type" : "object"
          },
          "immutable" : {
            "description" : "Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil. This is a beta field enabled by ImmutableEphemeralVolumes feature gate.",
            "type" : "boolean"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "stringData" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.",
            "type" : "object"
          },
          "type" : {
            "description" : "Used to facilitate programmatic handling of secret data.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ScopedResourceSelectorRequirement" : {
        "description" : "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
        "properties" : {
          "operator" : {
            "description" : "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.",
            "type" : "string"
          },
          "scopeName" : {
            "description" : "The name of the scope that the selector applies to.",
            "type" : "string"
          },
          "values" : {
            "description" : "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "scopeName", "operator" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ScopeSelector" : {
        "description" : "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.",
        "properties" : {
          "matchExpressions" : {
            "description" : "A list of scope selector requirements by scope of the resources.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ScopedResourceSelectorRequirement"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ResourceQuotaSpec" : {
        "description" : "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
        "properties" : {
          "hard" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "type" : "object"
          },
          "scopeSelector" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ScopeSelector",
            "description" : "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched."
          },
          "scopes" : {
            "description" : "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ResourceQuota" : {
        "description" : "ResourceQuota sets aggregate quota restrictions enforced per namespace",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceQuotaSpec",
            "description" : "Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceQuotaStatus",
            "description" : "Status defines the actual enforced quota and its current usage. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.ResourceQuotaStatus" : {
        "description" : "ResourceQuotaStatus defines the enforced hard limits and observed use.",
        "properties" : {
          "hard" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "type" : "object"
          },
          "used" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity"
            },
            "description" : "Used is the current observed total usage of the resource in the namespace.",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup_v2" : {
        "description" : "APIGroup contains the name, the supported versions, and the preferred version of a group.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "name is the name of the group.",
            "type" : "string"
          },
          "preferredVersion" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery",
            "description" : "preferredVersion is the version preferred by the API server, which probably is the storage version."
          },
          "serverAddressByClientCIDRs" : {
            "description" : "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
            },
            "type" : "array"
          },
          "versions" : {
            "description" : "versions are the versions supported in this group.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "versions" ],
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.IngressBackend" : {
        "description" : "IngressBackend describes all endpoints for a given service and port.",
        "properties" : {
          "resource" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.TypedLocalObjectReference",
            "description" : "Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, serviceName and servicePort must not be specified."
          },
          "serviceName" : {
            "description" : "Specifies the name of the referenced service.",
            "type" : "string"
          },
          "servicePort" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
            "description" : "Specifies the port of the referenced service."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.IngressSpec" : {
        "description" : "IngressSpec describes the Ingress the user wishes to exist.",
        "properties" : {
          "backend" : {
            "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressBackend",
            "description" : "A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default."
          },
          "ingressClassName" : {
            "description" : "IngressClassName is the name of the IngressClass cluster resource. The associated IngressClass defines which controller will implement the resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, it must be given precedence over this field. The controller may emit a warning if the field and annotation have different values. Implementations of this API should ignore Ingresses without a class specified. An IngressClass resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the IngressClass documentation.",
            "type" : "string"
          },
          "rules" : {
            "description" : "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressRule"
            },
            "type" : "array"
          },
          "tls" : {
            "description" : "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressTLS"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.HTTPIngressRuleValue" : {
        "description" : "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
        "properties" : {
          "paths" : {
            "description" : "A collection of paths that map requests to backends.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.HTTPIngressPath"
            },
            "type" : "array"
          }
        },
        "required" : [ "paths" ],
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.IngressTLS" : {
        "description" : "IngressTLS describes the transport layer security associated with an Ingress.",
        "properties" : {
          "hosts" : {
            "description" : "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "secretName" : {
            "description" : "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.IngressRule" : {
        "description" : "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
        "properties" : {
          "host" : {
            "description" : "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to",
            "type" : "string"
          },
          "http" : {
            "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.HTTPIngressRuleValue"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.Ingress" : {
        "description" : "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressSpec",
            "description" : "Spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressStatus",
            "description" : "Status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.IngressStatus" : {
        "description" : "IngressStatus describe the current state of the Ingress.",
        "properties" : {
          "loadBalancer" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.LoadBalancerStatus",
            "description" : "LoadBalancer contains the current status of the load-balancer."
          }
        },
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.HTTPIngressPath" : {
        "description" : "HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.",
        "properties" : {
          "backend" : {
            "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressBackend",
            "description" : "Backend defines the referenced service endpoint to which the traffic will be forwarded to."
          },
          "path" : {
            "description" : "Path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. When unspecified, all paths from incoming requests are matched.",
            "type" : "string"
          },
          "pathType" : {
            "description" : "PathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is",
            "type" : "string"
          },
          "property" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Extension property on the path.",
            "type" : "object"
          }
        },
        "required" : [ "backend" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.TopologySelectorTerm" : {
        "description" : "A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.",
        "properties" : {
          "matchLabelExpressions" : {
            "description" : "A list of topology selector requirements by labels.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.TopologySelectorLabelRequirement"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.storage.v1.StorageClass" : {
        "description" : "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.",
        "properties" : {
          "allowVolumeExpansion" : {
            "description" : "AllowVolumeExpansion shows whether the storage class allow volume expand",
            "type" : "boolean"
          },
          "allowedTopologies" : {
            "description" : "Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.TopologySelectorTerm"
            },
            "type" : "array"
          },
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "mountOptions" : {
            "description" : "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "parameters" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Parameters holds the parameters for the provisioner that should create volumes of this storage class.",
            "type" : "object"
          },
          "provisioner" : {
            "description" : "Provisioner indicates the type of the provisioner.",
            "type" : "string"
          },
          "reclaimPolicy" : {
            "description" : "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.",
            "type" : "string"
          },
          "volumeBindingMode" : {
            "description" : "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.",
            "type" : "string"
          }
        },
        "required" : [ "provisioner" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.TopologySelectorLabelRequirement" : {
        "description" : "A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.",
        "properties" : {
          "key" : {
            "description" : "The label key that the selector applies to.",
            "type" : "string"
          },
          "values" : {
            "description" : "An array of string values. One value must match the label to be selected. Each entry in Values is ORed.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "key", "values" ],
        "type" : "object"
      },
      "cni.yangtse.crd.v1.EIPAttributes" : {
        "description" : "Attributes is the eip attributes which used to create eip.",
        "properties" : {
          "alias" : {
            "description" : "Alias of PublicIP",
            "type" : "string"
          },
          "bandwidth" : {
            "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPBandwidth",
            "description" : "Bandwidth create attributes"
          },
          "ipVersion" : {
            "description" : "IP Version of PublicIP",
            "enum" : [ 4, 6 ],
            "format" : "int32",
            "type" : "integer"
          },
          "networkType" : {
            "description" : "Network Type of PublicIP",
            "type" : "string"
          }
        },
        "required" : [ "bandwidth", "networkType" ],
        "type" : "object"
      },
      "cni.yangtse.crd.v1.EIPAssociate" : {
        "description" : "EIPAssociate is a eip associate info.",
        "properties" : {
          "attachment" : {
            "description" : "Attachment is the eip attachment info.",
            "properties" : {
              "freeTimestamp" : {
                "description" : "Timestamp of NeutronPort be to FixedPreBound or FixedUnBound phase",
                "format" : "date-time",
                "type" : "string"
              },
              "neutronPortName" : {
                "description" : "NeutronPortName is NeutronPort name which associated.",
                "type" : "string"
              },
              "neutronPortNamespace" : {
                "description" : "NeutronPortNamespace is NeutronPort namespace which associated.",
                "type" : "string"
              },
              "nodeName" : {
                "description" : "NodeName is node name where the NeutronPort resides, must with phase Bound, PreBound or FixedBound.",
                "type" : "string"
              },
              "podName" : {
                "description" : "Pod name",
                "type" : "string"
              },
              "podNamespace" : {
                "description" : "Pod Namespace",
                "type" : "string"
              }
            },
            "type" : "object"
          },
          "privateIP" : {
            "description" : "PrivateIP is private ip information",
            "properties" : {
              "id" : {
                "description" : "Port ID or EIP ID",
                "type" : "string"
              },
              "ipv4" : {
                "description" : "IPv4 is the IPv4 address for traffic from the eni.",
                "type" : "string"
              },
              "ipv6" : {
                "description" : "IPv6 is the IPv6 address for traffic from the eni.",
                "type" : "string"
              },
              "mac" : {
                "description" : "MAC is the MAC address of the endpoint interface.",
                "type" : "string"
              },
              "status" : {
                "description" : "Status of this IP",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "cni.yangtse.crd.v1.EIPPool" : {
        "description" : "EIPPool contains information about a EIPPool resource.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "description" : "Specification of the EIPPool.",
            "properties" : {
              "amount" : {
                "description" : "Amount is the amount of eips need to be create.",
                "maximum" : 500,
                "minimum" : 0,
                "type" : "integer"
              },
              "eipAttributes" : {
                "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPAttributes",
                "description" : "Attributes is the eip attributes which used to create eip."
              },
              "eips" : {
                "description" : "EIPs used to generate EIP resources.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          },
          "status" : {
            "description" : "Status of the EIPPool.",
            "properties" : {
              "associates" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPAssociate"
                },
                "description" : "eip associate infos.",
                "type" : "object"
              },
              "eips" : {
                "description" : "EIPs is a set of generated EIP resources.",
                "items" : {
                  "description" : "PublicIPInfo is information of a public ip.",
                  "properties" : {
                    "alias" : {
                      "description" : "Alias of the PublicIP",
                      "type" : "string"
                    },
                    "associateInstanceID" : {
                      "description" : "Associate instance id",
                      "type" : "string"
                    },
                    "associateInstanceType" : {
                      "description" : "Associate instance type",
                      "type" : "string"
                    },
                    "bandWidthChargeMode" : {
                      "description" : "Bandwidth charge mode of the PublicIP",
                      "type" : "string"
                    },
                    "bandwidthShareType" : {
                      "description" : "Bandwidth share type of the PublicIP",
                      "type" : "string"
                    },
                    "bandwidthSize" : {
                      "description" : "Bandwidth size of the PublicIP",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "id" : {
                      "description" : "The ID of the PublicIP",
                      "type" : "string"
                    },
                    "ipv4" : {
                      "description" : "The ipv4 address of the PublicIP",
                      "type" : "string"
                    },
                    "ipv6" : {
                      "description" : "The ipv6 address of the PublicIP",
                      "type" : "string"
                    },
                    "networkType" : {
                      "description" : "Network Type of PublicIP",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "PublicIP status",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "usage" : {
                "description" : "Usage is usage of eip in this pool, e.g. 2/10.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "cni.yangtse.crd.v1.EIPBandwidth" : {
        "description" : "Bandwidth create attributes",
        "properties" : {
          "chargeMode" : {
            "description" : "Bandwidth Charge Mode",
            "enum" : [ "bandwidth", "traffic" ],
            "type" : "string"
          },
          "id" : {
            "description" : "Bandwidth id, only useful for WHOLE bandwidth share type",
            "type" : "string"
          },
          "name" : {
            "description" : "Bandwidth name, only useful for PER bandwidth share type",
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_\\-\\.]+$",
            "type" : "string"
          },
          "shareType" : {
            "description" : "Bandwidth Share Type",
            "enum" : [ "PER", "WHOLE" ],
            "type" : "string"
          },
          "size" : {
            "description" : "Bandwidth size",
            "format" : "int32",
            "maximum" : 200000,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList_v2" : {
        "description" : "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type" : "string"
          },
          "groupVersion" : {
            "description" : "groupVersion is the group and version this APIResourceList is for.",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "resources" : {
            "description" : "resources contains the name of the resources and if they are namespaced.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
            },
            "type" : "array"
          }
        },
        "required" : [ "groupVersion", "resources" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EventSeries" : {
        "description" : "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.",
        "properties" : {
          "count" : {
            "description" : "Number of occurrences in this series up to the last heartbeat time",
            "format" : "int32",
            "type" : "integer"
          },
          "lastObservedTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
            "description" : "Time of the last occurrence observed"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.core.v1.Event" : {
        "description" : "Event is a report of an event somewhere in the cluster.",
        "properties" : {
          "action" : {
            "description" : "What action was taken/failed regarding to the Regarding object.",
            "type" : "string"
          },
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "count" : {
            "description" : "The number of times this event has occurred.",
            "format" : "int32",
            "type" : "integer"
          },
          "eventTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
            "description" : "Time when this Event was first observed."
          },
          "firstTimestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)"
          },
          "involvedObject" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ObjectReference",
            "description" : "The object that this event is about."
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "lastTimestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "The time at which the most recent occurrence of this event was recorded."
          },
          "message" : {
            "description" : "A human-readable description of the status of this operation.",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "reason" : {
            "description" : "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
            "type" : "string"
          },
          "related" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.ObjectReference",
            "description" : "Optional secondary object for more complex actions."
          },
          "reportingComponent" : {
            "description" : "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.",
            "type" : "string"
          },
          "reportingInstance" : {
            "description" : "ID of the controller instance, e.g. `kubelet-xyzf`.",
            "type" : "string"
          },
          "series" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.EventSeries",
            "description" : "Data about the Event series this event represents or nil if it's a singleton Event."
          },
          "source" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.EventSource",
            "description" : "The component reporting this event. Should be a short machine understandable string."
          },
          "type" : {
            "description" : "Type of this event (Normal, Warning), new types could be added in the future",
            "type" : "string"
          }
        },
        "required" : [ "metadata", "involvedObject" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EventSource" : {
        "description" : "EventSource contains information for an event.",
        "properties" : {
          "component" : {
            "description" : "Component from which the event is generated.",
            "type" : "string"
          },
          "host" : {
            "description" : "Node name on which the event is generated.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime" : {
        "description" : "MicroTime is version of Time with microsecond level precision.",
        "format" : "date-time",
        "type" : "object"
      },
      "io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetricsList" : {
        "description" : "PodMetricsList is a list of PodMetrics.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of pod metrics.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetrics"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta_v2",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta_v2" : {
        "description" : "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
        "properties" : {
          "continue" : {
            "description" : "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
            "type" : "string"
          },
          "resourceVersion" : {
            "description" : "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
            "type" : "string"
          },
          "selfLink" : {
            "description" : "selfLink is a URL representing this object. Populated by the system. Read-only.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2" : {
        "description" : "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "properties" : {
          "annotations" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "type" : "object"
          },
          "clusterName" : {
            "description" : "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
            "type" : "string"
          },
          "creationTimestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC."
          },
          "deletionGracePeriodSeconds" : {
            "description" : "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "format" : "int64",
            "type" : "integer"
          },
          "deletionTimestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested."
          },
          "finalizers" : {
            "description" : "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "generateName" : {
            "description" : "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.",
            "type" : "string"
          },
          "generation" : {
            "description" : "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
            "format" : "int64",
            "type" : "integer"
          },
          "initializers" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers",
            "description" : "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects."
          },
          "labels" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "type" : "object"
          },
          "managedFields" : {
            "description" : "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry_v2"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "type" : "string"
          },
          "namespace" : {
            "description" : "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.",
            "type" : "string"
          },
          "ownerReferences" : {
            "description" : "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference_v2"
            },
            "type" : "array"
          },
          "resourceVersion" : {
            "description" : "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.",
            "type" : "string"
          },
          "selfLink" : {
            "description" : "SelfLink is a URL representing this object. Populated by the system. Read-only.",
            "type" : "string"
          },
          "uid" : {
            "description" : "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Fields" : {
        "description" : "Fields stores a set of fields in a data structure like a Trie. To understand how this is used, see: https://github.com/kubernetes-sigs/structured-merge-diff",
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers" : {
        "description" : "Initializers tracks the progress of initialization.",
        "properties" : {
          "pending" : {
            "description" : "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Initializer"
            },
            "type" : "array"
          },
          "result" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2",
            "description" : "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion."
          }
        },
        "required" : [ "pending" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails_v2" : {
        "description" : "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
        "properties" : {
          "causes" : {
            "description" : "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
            },
            "type" : "array"
          },
          "group" : {
            "description" : "The group attribute of the resource associated with the status StatusReason.",
            "type" : "string"
          },
          "kind" : {
            "description" : "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
            "type" : "string"
          },
          "retryAfterSeconds" : {
            "description" : "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
            "format" : "int32",
            "type" : "integer"
          },
          "uid" : {
            "description" : "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry_v2" : {
        "description" : "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "type" : "string"
          },
          "fields" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Fields",
            "description" : "Fields identifies a set of fields."
          },
          "manager" : {
            "description" : "Manager is an identifier of the workflow managing these fields.",
            "type" : "string"
          },
          "operation" : {
            "description" : "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
            "type" : "string"
          },
          "time" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'"
          }
        },
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Duration" : {
        "description" : "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
        "type" : "object"
      },
      "io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetrics" : {
        "description" : "PodMetrics sets resource usage metrics of a pod.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type" : "string"
          },
          "containers" : {
            "description" : "Metrics for all containers are collected within the same time window.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.metrics.pkg.apis.metrics.v1beta1.ContainerMetrics"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
          },
          "timestamp" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "The following fields define time interval from which metrics were collected from the interval [Timestamp-Window, Timestamp]."
          },
          "window" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
          }
        },
        "required" : [ "timestamp", "window", "containers" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Initializer" : {
        "description" : "Initializer is information about an initializer that has not yet completed.",
        "properties" : {
          "name" : {
            "description" : "name of the process that is responsible for initializing this object.",
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "io.k8s.metrics.pkg.apis.metrics.v1beta1.ContainerMetrics" : {
        "description" : "ContainerMetrics sets resource usage metrics of a container.",
        "properties" : {
          "name" : {
            "description" : "Container name corresponding to the one from pod.spec.containers.",
            "type" : "string"
          },
          "usage" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.api.resource.Quantity_v2"
            },
            "description" : "The memory usage is the memory working set.",
            "type" : "object"
          }
        },
        "required" : [ "name", "usage" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference_v2" : {
        "description" : "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "properties" : {
          "apiVersion" : {
            "description" : "API version of the referent.",
            "type" : "string"
          },
          "blockOwnerDeletion" : {
            "description" : "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "type" : "boolean"
          },
          "controller" : {
            "description" : "If true, this reference points to the managing controller.",
            "type" : "boolean"
          },
          "kind" : {
            "description" : "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "type" : "string"
          },
          "uid" : {
            "description" : "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "type" : "string"
          }
        },
        "required" : [ "apiVersion", "kind", "name", "uid" ],
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.api.resource.Quantity_v2" : {
        "description" : "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and Int64() accessors.",
        "type" : "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2" : {
        "description" : "Status is a return value for calls that don't return other objects.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type" : "string"
          },
          "code" : {
            "description" : "Suggested HTTP return code for this status, 0 if not set.",
            "format" : "int32",
            "type" : "integer"
          },
          "details" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails_v2",
            "description" : "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "message" : {
            "description" : "A human-readable description of the status of this operation.",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta_v2",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          },
          "reason" : {
            "description" : "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.apps.v1.ReplicaSetSpec" : {
        "description" : "ReplicaSetSpec is the specification of a ReplicaSet.",
        "properties" : {
          "minReadySeconds" : {
            "description" : "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
            "format" : "int32",
            "type" : "integer"
          },
          "replicas" : {
            "description" : "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
            "format" : "int32",
            "type" : "integer"
          },
          "selector" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
            "description" : "Selector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
          },
          "template" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodTemplateSpec",
            "description" : "Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
          }
        },
        "required" : [ "selector" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.ReplicaSetList" : {
        "description" : "ReplicaSetList is a collection of ReplicaSets.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.apps.v1.ReplicaSet"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.ReplicaSetCondition" : {
        "description" : "ReplicaSetCondition describes the state of a replica set at a certain point.",
        "properties" : {
          "lastTransitionTime" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
            "description" : "The last time the condition transitioned from one status to another."
          },
          "message" : {
            "description" : "A human readable message indicating details about the transition.",
            "type" : "string"
          },
          "reason" : {
            "description" : "The reason for the condition's last transition.",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the condition, one of True, False, Unknown.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of replica set condition.",
            "type" : "string"
          }
        },
        "required" : [ "type", "status" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.ReplicaSet" : {
        "description" : "ReplicaSet ensures that a specified number of pod replicas are running at any given time.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.ReplicaSetSpec",
            "description" : "Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          },
          "status" : {
            "$ref" : "#/components/schemas/io.k8s.api.apps.v1.ReplicaSetStatus",
            "description" : "Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
          }
        },
        "type" : "object"
      },
      "io.k8s.api.apps.v1.ReplicaSetStatus" : {
        "description" : "ReplicaSetStatus represents the current status of a ReplicaSet.",
        "properties" : {
          "availableReplicas" : {
            "description" : "The number of available replicas (ready for at least minReadySeconds) for this replica set.",
            "format" : "int32",
            "type" : "integer"
          },
          "conditions" : {
            "description" : "Represents the latest available observations of a replica set's current state.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.apps.v1.ReplicaSetCondition"
            },
            "type" : "array"
          },
          "fullyLabeledReplicas" : {
            "description" : "The number of pods that have labels matching the labels of the pod template of the replicaset.",
            "format" : "int32",
            "type" : "integer"
          },
          "observedGeneration" : {
            "description" : "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.",
            "format" : "int64",
            "type" : "integer"
          },
          "readyReplicas" : {
            "description" : "The number of ready replicas for this replica set.",
            "format" : "int32",
            "type" : "integer"
          },
          "replicas" : {
            "description" : "Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "replicas" ],
        "type" : "object"
      },
      "io.k8s.api.batch.v1.JobList" : {
        "description" : "JobList is a collection of jobs.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "items is the list of Jobs.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.storage.v1.StorageClassList" : {
        "description" : "StorageClassList is a collection of storage classes.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is the list of StorageClasses",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.storage.v1.StorageClass"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.cci.v1beta1.NetworkList" : {
        "description" : "NetworkList is a list of network resource in container.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.PersistentVolumeClaimList" : {
        "description" : "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "A list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "cni.yangtse.crd.v1.EIPPoolList" : {
        "description" : "EIPPoolList is a list of EIPPool",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of eippools. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "items" : {
              "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.apps.v1.StatefulSetList" : {
        "description" : "StatefulSetList is a collection of StatefulSets.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ResourceQuotaList" : {
        "description" : "ResourceQuotaList is a list of ResourceQuota items.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceQuota"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.extensions.v1beta1.IngressList" : {
        "description" : "IngressList is a collection of Ingress.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "Items is the list of Ingress.",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "spec.policies" : {
        "properties" : {
          "action" : {
            "description" : "The action that will be taken to the PodGroup according to Event. One of \"Restart\", \"None\". Default to None.",
            "type" : "string"
          },
          "event" : {
            "description" : "The Event recorded by scheduler; the controller takes actions according to this Event.",
            "type" : "string"
          },
          "timeout" : {
            "description" : "Timeout is the grace period for controller to take actions. Default to nil (take action immediately).",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "spec" : {
        "properties" : {
          "maxRetry" : {
            "description" : "The limit for retrying submiting job, default is 3",
            "format" : "int32",
            "type" : "integer"
          },
          "minAvailable" : {
            "description" : "The minimal available pods to run for this Job",
            "format" : "int32",
            "type" : "integer"
          },
          "plugins" : {
            "additionalProperties" : false,
            "description" : "Enabled task plugins when creating job.",
            "type" : "object"
          },
          "policies" : {
            "description" : "Specifies the default lifecycle of tasks",
            "items" : {
              "$ref" : "#/components/schemas/spec.policies"
            },
            "type" : "array"
          },
          "queue" : {
            "description" : "The name of the queue on which job should been created",
            "type" : "string"
          },
          "schedulerName" : {
            "description" : "SchedulerName is the default value of `tasks.template.spec.schedulerName`.",
            "type" : "string"
          },
          "tasks" : {
            "description" : "Tasks specifies the task specification of Job",
            "items" : {
              "$ref" : "#/components/schemas/spec.tasks"
            },
            "type" : "array"
          },
          "volumes" : {
            "description" : "The volumes for Job",
            "items" : {
              "$ref" : "#/components/schemas/spec.volumes"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "status" : {
        "properties" : {
          "ControlledResources" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "All of the resources that are controlled by this job.",
            "type" : "object"
          },
          "Succeeded" : {
            "description" : "The number of pods which reached phase Succeeded.",
            "format" : "int32",
            "type" : "integer"
          },
          "failed" : {
            "description" : "The number of pods which reached phase Failed.",
            "format" : "int32",
            "type" : "integer"
          },
          "minAvailable" : {
            "description" : "The minimal available pods to run for this Job",
            "format" : "int32",
            "type" : "integer"
          },
          "pending" : {
            "description" : "The number of pending pods.",
            "format" : "int32",
            "type" : "integer"
          },
          "retryCount" : {
            "description" : "The number that volcano retried to submit the job.",
            "format" : "int32",
            "type" : "integer"
          },
          "running" : {
            "description" : "The number of running pods.",
            "format" : "int32",
            "type" : "integer"
          },
          "state" : {
            "$ref" : "#/components/schemas/status.state",
            "description" : "Current state of Job."
          },
          "version" : {
            "description" : "Job's current version",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "spec.tasks" : {
        "properties" : {
          "name" : {
            "description" : "Name specifies the name of tasks",
            "type" : "string"
          },
          "policies" : {
            "description" : "Specifies the lifecycle of task",
            "items" : {
              "$ref" : "#/components/schemas/spec.tasks.policies"
            },
            "type" : "array"
          },
          "replicas" : {
            "description" : "Replicas specifies the replicas of this TaskSpec in Job",
            "format" : "int32",
            "type" : "integer"
          },
          "template" : {
            "description" : "Specifies the pod that will be created for this TaskSpec when executing a Job",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "status.state" : {
        "properties" : {
          "message" : {
            "description" : "Human-readable message indicating details about last transition.",
            "type" : "string"
          },
          "phase" : {
            "description" : "The phase of Job",
            "type" : "string"
          },
          "reason" : {
            "description" : "Unique, one-word, CamelCase reason for the condition's last transition.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "spec.volumes" : {
        "properties" : {
          "mountPath" : {
            "description" : "Path within the container at which the volume should be mounted. Must not contain ':'.",
            "type" : "string"
          },
          "volumeClaim" : {
            "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim",
            "description" : "VolumeClaim defines the PVC used by the VolumeMount."
          },
          "volumeClaimName" : {
            "description" : "The name of the volume claim.",
            "type" : "string"
          }
        },
        "required" : [ "mountPath" ],
        "type" : "object"
      },
      "sh.volcano.batch.v1alpha1.Job" : {
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type" : "string"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "description" : "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/spec",
            "description" : "Specification of the desired behavior of a cron job, including the minAvailable",
            "type" : "object"
          },
          "status" : {
            "$ref" : "#/components/schemas/status",
            "description" : "Current status of Job",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "spec.tasks.policies" : {
        "properties" : {
          "action" : {
            "description" : "The action that will be taken to the PodGroup according to Event. One of \"Restart\", \"None\". Default to None.",
            "type" : "string"
          },
          "event" : {
            "description" : "The Event recorded by scheduler; the controller takes actions according to this Event.",
            "type" : "string"
          },
          "timeout" : {
            "description" : "Timeout is the grace period for controller to take actions. Default to nil (take action immediately).",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "sh.volcano.batch.v1alpha1.JobList" : {
        "description" : "JobList is a list of Job",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of jobs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "items" : {
              "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.EventList" : {
        "description" : "EventList is a list of events.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of events",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Event"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "io.k8s.api.core.v1.ServiceList" : {
        "description" : "ServiceList holds a list of services.",
        "properties" : {
          "apiVersion" : {
            "description" : "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type" : "string"
          },
          "items" : {
            "description" : "List of services",
            "items" : {
              "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
            },
            "type" : "array"
          },
          "kind" : {
            "description" : "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
            "description" : "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      }
    },
    "securitySchemes" : { }
  },
  "paths" : {
    "/deleteCoreV1NamespacedEvent" : {
      "delete" : {
        "tags" : [ "Event" ],
        "summary" : "删除Event",
        "description" : "删除Event。",
        "operationId" : "deleteCoreV1NamespacedEvent",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedEvent",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/events/{name}"
    },
    "/listCoreV1NamespacedConfigMap" : {
      "get" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "查询指定namespace下的ConfigMaps",
        "description" : "查询Namespace下所有ConfigMap的详细信息。",
        "operationId" : "listCoreV1NamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMapList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps"
    },
    "/getCrdYangtseCniAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/crd.yangtse.cni",
        "description" : "查询APIGroup /apis/crd.yangtse.cni",
        "operationId" : "getCrdYangtseCniAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getCrdYangtseCniAPIGroup",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni"
    },
    "/deleteCrdYangtseCniV1NamespacedEIPPool" : {
      "delete" : {
        "tags" : [ "EIPPool" ],
        "summary" : "删除指定的EIPPool",
        "description" : "删除指定的EIPPool。",
        "operationId" : "deleteCrdYangtseCniV1NamespacedEIPPool",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCrdYangtseCniV1NamespacedEIPPool",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools/{name}"
    },
    "/createCoreV1NamespacedEndpoints" : {
      "post" : {
        "tags" : [ "Endpoint" ],
        "summary" : "创建Endpoint",
        "description" : "创建Endpoint。",
        "operationId" : "createCoreV1NamespacedEndpoints",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1NamespacedEndpoints",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/endpoints"
    },
    "/readCoreV1NamespacedConfigMap" : {
      "get" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "查询ConfigMap",
        "description" : "查询ConfigMap详细信息。",
        "operationId" : "readCoreV1NamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps/{name}"
    },
    "/readAppsV1NamespacedDeployment" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "查询Deployment",
        "description" : "查询Deployment的详细信息。",
        "operationId" : "readAppsV1NamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readAppsV1NamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
    },
    "/createAppsV1NamespacedDeployment" : {
      "post" : {
        "tags" : [ "Deployment" ],
        "summary" : "创建Deployment",
        "description" : "创建一个Deployment。",
        "operationId" : "createAppsV1NamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createAppsV1NamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments"
    },
    "/deleteAppsV1NamespacedStatefulSet" : {
      "delete" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "删除StatefulSet",
        "description" : "删除StatefulSet。",
        "operationId" : "deleteAppsV1NamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteAppsV1NamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}"
    },
    "/listBatchV1beta1CronJobForAllNamespaces" : {
      "get" : {
        "tags" : [ "CronJob" ],
        "summary" : "查询所有namespace下的CronJobs",
        "description" : "查询所有namespace下所有CronJob的详细信息。",
        "operationId" : "listBatchV1beta1CronJobForAllNamespaces",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1beta1.CronJobList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listBatchV1beta1CronJobForAllNamespaces",
      "x-url" : "{endpoint}/apis/batch/v1beta1/cronjobs"
    },
    "/patchCoreV1NamespacedService" : {
      "patch" : {
        "tags" : [ "Service" ],
        "summary" : "更新Service",
        "description" : "更新Service。",
        "operationId" : "patchCoreV1NamespacedService",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchCoreV1NamespacedService",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services/{name}"
    },
    "/getBatchVolcanoShV1alpha1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有batch.volcano.sh/v1alpha1的API",
        "description" : "查询所有batch.volcano.sh/v1alpha1的API",
        "operationId" : "getBatchVolcanoShV1alpha1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getBatchVolcanoShV1alpha1APIResources",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1"
    },
    "/listRbacAuthorizationV1ClusterRole" : {
      "get" : {
        "tags" : [ "ClusterRole" ],
        "summary" : "获取ClusterRole列表",
        "description" : "This API is used to list or watch objects of kind ClusterRole",
        "operationId" : "listRbacAuthorizationV1ClusterRole",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.ClusterRoleList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listRbacAuthorizationV1ClusterRole",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/clusterroles"
    },
    "/replaceCoreV1NamespacedService" : {
      "put" : {
        "tags" : [ "Service" ],
        "summary" : "替换Service",
        "description" : "替换Service。",
        "operationId" : "replaceCoreV1NamespacedService",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCoreV1NamespacedService",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services/{name}"
    },
    "/listAppsV1DeploymentForAllNamespaces" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "查询用户所有Deployments",
        "description" : "查询用户所有Deployment。",
        "operationId" : "listAppsV1DeploymentForAllNamespaces",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.DeploymentList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listAppsV1DeploymentForAllNamespaces",
      "x-url" : "{endpoint}/apis/apps/v1/deployments"
    },
    "/getBatchAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/batch",
        "description" : "查询APIGroup /apis/batch",
        "operationId" : "getBatchAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getBatchAPIGroup",
      "x-url" : "{endpoint}/apis/batch"
    },
    "/deleteCoreV1NamespacedSecret" : {
      "delete" : {
        "tags" : [ "Secret" ],
        "summary" : "删除Secret",
        "description" : "删除Secret。",
        "operationId" : "deleteCoreV1NamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets/{name}"
    },
    "/listRbacAuthorizationV1NamespacedRoleBinding" : {
      "get" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "获取指定namespace下RoleBinding列表",
        "description" : "This API is used to list or watch objects of kind RoleBinding",
        "operationId" : "listRbacAuthorizationV1NamespacedRoleBinding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBindingList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listRbacAuthorizationV1NamespacedRoleBinding",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings"
    },
    "/listCoreV1NamespacedPod" : {
      "get" : {
        "tags" : [ "Pod" ],
        "summary" : "查询指定namespace下的Pods",
        "description" : "查询指定namespace下的Pods的详细信息。",
        "operationId" : "listCoreV1NamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods"
    },
    "/deleteCoreV1NamespacedConfigMap" : {
      "delete" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "删除ConfigMap",
        "description" : "删除ConfigMap。",
        "operationId" : "deleteCoreV1NamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps/{name}"
    },
    "/getRbacAuthorizationAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/rbac.authorization.k8s.io",
        "description" : "get information of a group",
        "operationId" : "getRbacAuthorizationAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getRbacAuthorizationAPIGroup",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io"
    },
    "/createCoreV1NamespacedService" : {
      "post" : {
        "tags" : [ "Service" ],
        "summary" : "创建Service",
        "description" : "创建一个Service。",
        "operationId" : "createCoreV1NamespacedService",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1NamespacedService",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services"
    },
    "/listRbacAuthorizationV1RoleBindingForAllNamespaces" : {
      "get" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "获取RoleBinding列表",
        "description" : "This API is used to list or watch objects of kind RoleBinding",
        "operationId" : "listRbacAuthorizationV1RoleBindingForAllNamespaces",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBindingList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listRbacAuthorizationV1RoleBindingForAllNamespaces",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/rolebindings"
    },
    "/readAppsV1NamespacedDeploymentStatus" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "查询Deployment状态",
        "description" : "查询Deployment的状态。",
        "operationId" : "readAppsV1NamespacedDeploymentStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readAppsV1NamespacedDeploymentStatus",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}/status"
    },
    "/getBatchV1beta1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有batch/v1beta1的API",
        "description" : "get available resources",
        "operationId" : "getBatchV1beta1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getBatchV1beta1APIResources",
      "x-url" : "{endpoint}/apis/batch/v1beta1"
    },
    "/patchAppsV1NamespacedDeployment" : {
      "patch" : {
        "tags" : [ "Deployment" ],
        "summary" : "更新Deployment",
        "description" : "更新Deployment。",
        "operationId" : "patchAppsV1NamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchAppsV1NamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
    },
    "/replaceAppsV1NamespacedStatefulSet" : {
      "put" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "替换StatefulSet",
        "description" : "替换StatefulSet。",
        "operationId" : "replaceAppsV1NamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceAppsV1NamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}"
    },
    "/deleteNetworkingCciIoV1beta1NamespacedNetwork" : {
      "delete" : {
        "tags" : [ "Network" ],
        "summary" : "删除Network",
        "description" : "删除一个指定Network对象。",
        "operationId" : "deleteNetworkingCciIoV1beta1NamespacedNetwork",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteNetworkingCciIoV1beta1NamespacedNetwork",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1/namespaces/{namespace}/networks/{name}"
    },
    "/readAppsV1NamespacedDeploymentScale" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "查询Deployment的伸缩操作",
        "description" : "查询Deployment的伸缩操作",
        "operationId" : "readAppsV1NamespacedDeploymentScale",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readAppsV1NamespacedDeploymentScale",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale"
    },
    "/readAppsV1NamespacedStatefulSet" : {
      "get" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "查询StatefulSet",
        "description" : "查询StatefulSet的详细信息。",
        "operationId" : "readAppsV1NamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readAppsV1NamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}"
    },
    "/patchCoreV1NamespacedConfigMap" : {
      "patch" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "更新ConfigMap",
        "description" : "更新ConfigMap。",
        "operationId" : "patchCoreV1NamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchCoreV1NamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps/{name}"
    },
    "/readRbacAuthorizationV1NamespacedRoleBinding" : {
      "get" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "获取指定的RoleBinding",
        "description" : "This API is used to read the specified RoleBinding",
        "operationId" : "readRbacAuthorizationV1NamespacedRoleBinding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readRbacAuthorizationV1NamespacedRoleBinding",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
    },
    "/deleteCoreV1CollectionNamespacedSecret" : {
      "delete" : {
        "tags" : [ "Secret" ],
        "summary" : "删除指定namespace下的Secrets",
        "description" : "删除Namespace下所有Secret。",
        "operationId" : "deleteCoreV1CollectionNamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1CollectionNamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets"
    },
    "/getBatchVolcanoShAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/batch.volcano.sh",
        "description" : "查询APIGroup /apis/batch.volcano.sh",
        "operationId" : "getBatchVolcanoShAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getBatchVolcanoShAPIGroup",
      "x-url" : "{endpoint}/apis/batch.volcano.sh"
    },
    "/getCoreAPIVersions" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIVersions",
        "description" : "get available API versions",
        "operationId" : "getCoreAPIVersions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getCoreAPIVersions",
      "x-url" : "{endpoint}/api"
    },
    "/getExtensionsAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/extensions",
        "description" : "查询APIGroup /apis/extensions",
        "operationId" : "getExtensionsAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getExtensionsAPIGroup",
      "x-url" : "{endpoint}/apis/extensions"
    },
    "/replaceCoreV1NamespacedConfigMap" : {
      "put" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "替换ConfigMap",
        "description" : "替换ConfigMap。",
        "operationId" : "replaceCoreV1NamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCoreV1NamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps/{name}"
    },
    "/deleteCoreV1CollectionNamespacedConfigMap" : {
      "delete" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "删除指定namespace下的ConfigMaps",
        "description" : "删除Namespace下所有ConfigMap。",
        "operationId" : "deleteCoreV1CollectionNamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1CollectionNamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps"
    },
    "/listAppsV1NamespacedDeployment" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "查询指定namespace下的Deployments",
        "description" : "查询Namespace下所有Deployment的详细信息。",
        "operationId" : "listAppsV1NamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.DeploymentList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listAppsV1NamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments"
    },
    "/getAPIVersions" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroupList",
        "description" : "get available API versions",
        "operationId" : "getAPIVersions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getAPIVersions",
      "x-url" : "{endpoint}/apis"
    },
    "/listCoreV1NamespacedEndpoints" : {
      "get" : {
        "tags" : [ "Endpoint" ],
        "summary" : "查询指定namespace下的Endpoints",
        "description" : "查询Namespace下所有Endpoints。",
        "operationId" : "listCoreV1NamespacedEndpoints",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.EndpointsList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedEndpoints",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/endpoints"
    },
    "/patchAppsV1NamespacedStatefulSet" : {
      "patch" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "更新StatefulSet",
        "description" : "更新StatefulSet。",
        "operationId" : "patchAppsV1NamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchAppsV1NamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}"
    },
    "/readCoreV1NamespacedPodStatus" : {
      "get" : {
        "tags" : [ "Pod" ],
        "summary" : "查询Pod状态",
        "description" : "查询Pod对象的状态。",
        "operationId" : "readCoreV1NamespacedPodStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedPodStatus",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}/status"
    },
    "/listCoreV1Namespace" : {
      "get" : {
        "tags" : [ "Namespace" ],
        "summary" : "查询所有Namespaces",
        "description" : "该API用于获取集群中该用户当前项目下所有Namespace的详细信息。",
        "operationId" : "listCoreV1Namespace",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.NamespaceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1Namespace",
      "x-url" : "{endpoint}/api/v1/namespaces"
    },
    "/readCoreV1NamespacedServiceStatus" : {
      "get" : {
        "tags" : [ "Service" ],
        "summary" : "查询service状态",
        "description" : "查询指定的Service的状态。",
        "operationId" : "readCoreV1NamespacedServiceStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedServiceStatus",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services/{name}/status"
    },
    "/readBatchV1NamespacedJobStatus" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "查询Job状态",
        "description" : "查询Job状态。",
        "operationId" : "readBatchV1NamespacedJobStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readBatchV1NamespacedJobStatus",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs/{name}/status"
    },
    "/deleteAppsV1NamespacedDeployment" : {
      "delete" : {
        "tags" : [ "Deployment" ],
        "summary" : "删除Deployment",
        "description" : "删除Deployment。",
        "operationId" : "deleteAppsV1NamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteAppsV1NamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
    },
    "/listCoreV1NamespacedSecret" : {
      "get" : {
        "tags" : [ "Secret" ],
        "summary" : "查询指定namespace下的Secrets",
        "description" : "查询指定namespace下的所有Secret对象。",
        "operationId" : "listCoreV1NamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.SecretList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets"
    },
    "/readCoreV1NamespacedResourceQuota" : {
      "get" : {
        "tags" : [ "ResourceQuota" ],
        "summary" : "查询指定的resourcequota",
        "description" : "查询指定的resourcequota(资源用量)。",
        "operationId" : "readCoreV1NamespacedResourceQuota",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceQuota"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedResourceQuota",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/resourcequotas/{name}"
    },
    "/patchAppsV1NamespacedDeploymentScale" : {
      "patch" : {
        "tags" : [ "Deployment" ],
        "summary" : "更新Deployment的伸缩操作",
        "description" : "This API is used to partially update scale of the specified Scale.",
        "operationId" : "patchAppsV1NamespacedDeploymentScale",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchAppsV1NamespacedDeploymentScale",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale"
    },
    "/getMetricsAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/metrics.k8s.io",
        "description" : "查询APIGroup /apis/metrics.k8s.io",
        "operationId" : "getMetricsAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup_v2"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getMetricsAPIGroup",
      "x-url" : "{endpoint}/apis/metrics.k8s.io"
    },
    "/replaceCoreV1NamespacedEndpoints" : {
      "put" : {
        "tags" : [ "Endpoint" ],
        "summary" : "替换Endpoint",
        "description" : "替换Endpoint。",
        "operationId" : "replaceCoreV1NamespacedEndpoints",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCoreV1NamespacedEndpoints",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/endpoints/{name}"
    },
    "/readExtensionsV1beta1NamespacedIngressStatus" : {
      "get" : {
        "tags" : [ "Ingress" ],
        "summary" : "查询Ingress状态",
        "description" : "查询Ingress状态。",
        "operationId" : "readExtensionsV1beta1NamespacedIngressStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readExtensionsV1beta1NamespacedIngressStatus",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status"
    },
    "/readStorageV1StorageClass" : {
      "get" : {
        "tags" : [ "StorageClass" ],
        "summary" : "查询指定的storage class",
        "description" : "read the specified StorageClass",
        "operationId" : "readStorageV1StorageClass",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.storage.v1.StorageClass"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readStorageV1StorageClass",
      "x-url" : "{endpoint}/apis/storage.k8s.io/v1/storageclasses/{name}"
    },
    "/connectCoreV1PostNamespacedPodExec" : {
      "post" : {
        "tags" : [ "Pod" ],
        "summary" : "进入容器执行命令",
        "description" : "进入容器执行命令。",
        "operationId" : "connectCoreV1PostNamespacedPodExec",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ]
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "connectCoreV1PostNamespacedPodExec",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}/exec"
    },
    "/readCoreV1NamespacedEndpoints" : {
      "get" : {
        "tags" : [ "Endpoint" ],
        "summary" : "查询Endpoint",
        "description" : "查询Endpoint。",
        "operationId" : "readCoreV1NamespacedEndpoints",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedEndpoints",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/endpoints/{name}"
    },
    "/createNetworkingCciIoV1beta1NamespacedNetwork" : {
      "post" : {
        "tags" : [ "Network" ],
        "summary" : "创建Network",
        "description" : "创建一个Network对象。",
        "operationId" : "createNetworkingCciIoV1beta1NamespacedNetwork",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createNetworkingCciIoV1beta1NamespacedNetwork",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1/namespaces/{namespace}/networks"
    },
    "/replaceRbacAuthorizationV1NamespacedRoleBinding" : {
      "put" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "替换指定的RoleBinding",
        "description" : "This API is used to replace the specified RoleBinding",
        "operationId" : "replaceRbacAuthorizationV1NamespacedRoleBinding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceRbacAuthorizationV1NamespacedRoleBinding",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
    },
    "/readCrdYangtseCniV1NamespacedEIPPoolStatus" : {
      "get" : {
        "tags" : [ "EIPPool" ],
        "summary" : "查询指定的EIPPool",
        "description" : "查询指定的EIPPool的详细信息。",
        "operationId" : "readCrdYangtseCniV1NamespacedEIPPoolStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCrdYangtseCniV1NamespacedEIPPoolStatus",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools/{name}/status"
    },
    "/patchCoreV1NamespacedSecret" : {
      "patch" : {
        "tags" : [ "Secret" ],
        "summary" : "更新Secret",
        "description" : "更新Secret中部分信息。",
        "operationId" : "patchCoreV1NamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchCoreV1NamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets/{name}"
    },
    "/readExtensionsV1beta1NamespacedIngress" : {
      "get" : {
        "tags" : [ "Ingress" ],
        "summary" : "查询Ingress",
        "description" : "查询Ingress的详细信息。",
        "operationId" : "readExtensionsV1beta1NamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readExtensionsV1beta1NamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}"
    },
    "/getRbacAuthorizationV1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有rbac.authorization.k8s.io/v1的API",
        "description" : "get available resources",
        "operationId" : "getRbacAuthorizationV1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getRbacAuthorizationV1APIResources",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1"
    },
    "/deleteExtensionsV1beta1NamespacedIngress" : {
      "delete" : {
        "tags" : [ "Ingress" ],
        "summary" : "删除Ingress",
        "description" : "删除Ingress。",
        "operationId" : "deleteExtensionsV1beta1NamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteExtensionsV1beta1NamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}"
    },
    "/patchCoreV1NamespacedPod" : {
      "patch" : {
        "tags" : [ "Pod" ],
        "summary" : "更新Pod",
        "description" : "更新Pod。",
        "operationId" : "patchCoreV1NamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchCoreV1NamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}"
    },
    "/deleteBatchV1CollectionNamespacedJob" : {
      "delete" : {
        "tags" : [ "Job" ],
        "summary" : "删除指定namespace下的Jobs",
        "description" : "删除Namespace下所有Job。",
        "operationId" : "deleteBatchV1CollectionNamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteBatchV1CollectionNamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs"
    },
    "/readAppsV1NamespacedStatefulSetStatus" : {
      "get" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "查询StatefulSet状态",
        "description" : "查询StatefulSet状态。",
        "operationId" : "readAppsV1NamespacedStatefulSetStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readAppsV1NamespacedStatefulSetStatus",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status"
    },
    "/readCrdYangtseCniV1NamespacedEIPPool" : {
      "get" : {
        "tags" : [ "EIPPool" ],
        "summary" : "查询指定的EIPPool",
        "description" : "查询指定的EIPPool的详细信息。",
        "operationId" : "readCrdYangtseCniV1NamespacedEIPPool",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCrdYangtseCniV1NamespacedEIPPool",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools/{name}"
    },
    "/createBatchV1NamespacedJob" : {
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "创建Job",
        "description" : "创建Job。",
        "operationId" : "createBatchV1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createBatchV1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs"
    },
    "/replaceCoreV1NamespacedPersistentVolumeClaim" : {
      "put" : {
        "tags" : [ "PersistentVolumeClaim" ],
        "summary" : "替换PersistentVolumeClaims",
        "description" : "替换指定PersistentVolumeClaims。",
        "operationId" : "replaceCoreV1NamespacedPersistentVolumeClaim",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCoreV1NamespacedPersistentVolumeClaim",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
    },
    "/GetOpenAPIv2" : {
      "get" : {
        "tags" : [ "OpenAPIv2" ],
        "summary" : "查询open api swagger信息",
        "description" : "查询open api swagger信息。",
        "operationId" : "GetOpenAPIv2",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "GetOpenAPIv2",
      "x-url" : "{endpoint}/openapi/v2"
    },
    "/createCoreV1Namespace" : {
      "post" : {
        "tags" : [ "Namespace" ],
        "summary" : "创建Namespace",
        "description" : "创建一个Namespace。",
        "operationId" : "createCoreV1Namespace",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Namespace"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Namespace"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Namespace"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Namespace"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1Namespace",
      "x-url" : "{endpoint}/api/v1/namespaces"
    },
    "/patchCrdYangtseCniV1NamespacedEIPPool" : {
      "patch" : {
        "tags" : [ "EIPPool" ],
        "summary" : "更新EIPPool",
        "description" : "更新EIPPool。",
        "operationId" : "patchCrdYangtseCniV1NamespacedEIPPool",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchCrdYangtseCniV1NamespacedEIPPool",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools/{name}"
    },
    "/patchCoreV1NamespacedEndpoints" : {
      "patch" : {
        "tags" : [ "Endpoint" ],
        "summary" : "更新Endpoint",
        "description" : "更新Endpoint。",
        "operationId" : "patchCoreV1NamespacedEndpoints",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Endpoints"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchCoreV1NamespacedEndpoints",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/endpoints/{name}"
    },
    "/readRbacAuthorizationV1ClusterRole" : {
      "get" : {
        "tags" : [ "ClusterRole" ],
        "summary" : "查询指定的ClusterRole",
        "description" : "This API is used to read the specified ClusterRole",
        "operationId" : "readRbacAuthorizationV1ClusterRole",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.ClusterRole"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readRbacAuthorizationV1ClusterRole",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}"
    },
    "/getMetricsV1beta1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有metrics.k8s.io/v1beta1的API",
        "description" : "get available resources",
        "operationId" : "getMetricsV1beta1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList_v2"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getMetricsV1beta1APIResources",
      "x-url" : "{endpoint}/apis/metrics.k8s.io/v1beta1"
    },
    "/readCoreV1NamespacedSecret" : {
      "get" : {
        "tags" : [ "Secret" ],
        "summary" : "查询Secret",
        "description" : "查询Secret的详细信息。",
        "operationId" : "readCoreV1NamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets/{name}"
    },
    "/readCoreV1NamespacedPodLog" : {
      "get" : {
        "tags" : [ "Pod" ],
        "summary" : "查询Pod日志",
        "description" : "查询Pod的日志。",
        "operationId" : "readCoreV1NamespacedPodLog",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedPodLog",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}/log"
    },
    "/readCoreV1NamespacedEvent" : {
      "get" : {
        "tags" : [ "Event" ],
        "summary" : "查询Event",
        "description" : "查询Event详细信息。",
        "operationId" : "readCoreV1NamespacedEvent",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Event"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedEvent",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/events/{name}"
    },
    "/listMetricsV1beta1NamespacedPodMetrics" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "获取指定namespace下所有pods的metrics信息",
        "description" : "获取指定namespace下所有pods的metrics信息",
        "operationId" : "listMetricsV1beta1NamespacedPodMetrics",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetricsList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listMetricsV1beta1NamespacedPodMetrics",
      "x-url" : "{endpoint}/apis/metrics.k8s.io/v1beta1/namespaces/{namespace}/pods"
    },
    "/listAppsV1NamespacedReplicaSet" : {
      "get" : {
        "tags" : [ "ReplicaSet" ],
        "summary" : "查询指定namespace下的ReplicaSets",
        "description" : "查询命名空间下所有的ReplicaSets。",
        "operationId" : "listAppsV1NamespacedReplicaSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.ReplicaSetList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listAppsV1NamespacedReplicaSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/replicasets"
    },
    "/createAppsV1NamespacedStatefulSet" : {
      "post" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "创建StatefulSet",
        "description" : "创建StatefulSet。",
        "operationId" : "createAppsV1NamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSet"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createAppsV1NamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets"
    },
    "/listBatchV1NamespacedJob" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "查询指定namespace下的Jobs",
        "description" : "查询Namespace下所有Job的详细信息。",
        "operationId" : "listBatchV1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.JobList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listBatchV1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs"
    },
    "/deleteExtensionsV1beta1CollectionNamespacedIngress" : {
      "delete" : {
        "tags" : [ "Ingress" ],
        "summary" : "删除指定namespace下的ingresses",
        "description" : "删除Namespace下所有Ingress。",
        "operationId" : "deleteExtensionsV1beta1CollectionNamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteExtensionsV1beta1CollectionNamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses"
    },
    "/connectCoreV1GetNamespacedPodExec" : {
      "get" : {
        "tags" : [ "Pod" ],
        "summary" : "进入容器执行命令",
        "description" : "进入容器执行命令。",
        "operationId" : "connectCoreV1GetNamespacedPodExec",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "connectCoreV1GetNamespacedPodExec",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}/exec"
    },
    "/readCoreV1NamespacedPersistentVolumeClaim" : {
      "get" : {
        "tags" : [ "PersistentVolumeClaim" ],
        "summary" : "查询PersistentVolumeClaim",
        "description" : "查询PersistentVolumeClaim。",
        "operationId" : "readCoreV1NamespacedPersistentVolumeClaim",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedPersistentVolumeClaim",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
    },
    "/createCoreV1NamespacedPersistentVolumeClaim" : {
      "post" : {
        "tags" : [ "PersistentVolumeClaim" ],
        "summary" : "创建PersistentVolumeClaim",
        "description" : "创建PersistentVolumeClaim,主要适用于动态创建存储的场景,即存储资源未创建时,创建PVC会根据请求内容创建一个存储资源。",
        "operationId" : "createCoreV1NamespacedPersistentVolumeClaim",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1NamespacedPersistentVolumeClaim",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/persistentvolumeclaims"
    },
    "/getCoreV1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有v1版本的API",
        "description" : "get available resources",
        "operationId" : "getCoreV1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getCoreV1APIResources",
      "x-url" : "{endpoint}/api/v1"
    },
    "/listStorageV1StorageClass" : {
      "get" : {
        "tags" : [ "StorageClass" ],
        "summary" : "查询/apis/storage.k8s.io/v1版本的所有storage class",
        "description" : "list or watch objects of kind StorageClass",
        "operationId" : "listStorageV1StorageClass",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.storage.v1.StorageClassList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listStorageV1StorageClass",
      "x-url" : "{endpoint}/apis/storage.k8s.io/v1/storageclasses"
    },
    "/listNetworkingCciIoV1beta1NamespacedNetwork" : {
      "get" : {
        "tags" : [ "Network" ],
        "summary" : "查询指定namespace下的Networks",
        "description" : "查询指定namespace下的所有Network对象。",
        "operationId" : "listNetworkingCciIoV1beta1NamespacedNetwork",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.NetworkList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listNetworkingCciIoV1beta1NamespacedNetwork",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1/namespaces/{namespace}/networks"
    },
    "/getNetworkingCciIoAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/networking.cci.io",
        "description" : "查询APIGroup /apis/networking.cci.io",
        "operationId" : "getNetworkingCciIoAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getNetworkingCciIoAPIGroup",
      "x-url" : "{endpoint}/apis/networking.cci.io"
    },
    "/deleteCoreV1CollectionNamespacedPod" : {
      "delete" : {
        "tags" : [ "Pod" ],
        "summary" : "删除指定namespace下的Pods",
        "description" : "删除Namespace下所有Pod。",
        "operationId" : "deleteCoreV1CollectionNamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1CollectionNamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods"
    },
    "/deleteCoreV1Namespace" : {
      "delete" : {
        "tags" : [ "Namespace" ],
        "summary" : "删除Namespace",
        "description" : "删除一个Namespace。",
        "operationId" : "deleteCoreV1Namespace",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1Namespace",
      "x-url" : "{endpoint}/api/v1/namespaces/{name}"
    },
    "/listCoreV1NamespacedPersistentVolumeClaim" : {
      "get" : {
        "tags" : [ "PersistentVolumeClaim" ],
        "summary" : "查询指定namespace下的PersistentVolumeClaims",
        "description" : "查询Namespace下的所有PersistentVolumeClaim。",
        "operationId" : "listCoreV1NamespacedPersistentVolumeClaim",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaimList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedPersistentVolumeClaim",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/persistentvolumeclaims"
    },
    "/listCrdYangtseCniV1NamespacedEIPPool" : {
      "get" : {
        "tags" : [ "EIPPool" ],
        "summary" : "查询指定namespace下的EIPPools",
        "description" : "查询指定namespace下所有EIPPool的详细信息。",
        "operationId" : "listCrdYangtseCniV1NamespacedEIPPool",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPoolList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCrdYangtseCniV1NamespacedEIPPool",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools"
    },
    "/replaceCoreV1NamespacedSecret" : {
      "put" : {
        "tags" : [ "Secret" ],
        "summary" : "替换Secret",
        "description" : "替换Secret。",
        "operationId" : "replaceCoreV1NamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCoreV1NamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets/{name}"
    },
    "/getCrdYangtseCniV1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有crd.yangtse.cni/v1的API",
        "description" : "查询所有crd.yangtse.cni/v1的API",
        "operationId" : "getCrdYangtseCniV1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getCrdYangtseCniV1APIResources",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1"
    },
    "/listAppsV1NamespacedStatefulSet" : {
      "get" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "查询指定namespace下的StatefulSets",
        "description" : "查询Namespace下所有StatefulSet的详细信息。",
        "operationId" : "listAppsV1NamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSetList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listAppsV1NamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets"
    },
    "/getExtensionsV1beta1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有extensions/v1beta1的API",
        "description" : "get available resources",
        "operationId" : "getExtensionsV1beta1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getExtensionsV1beta1APIResources",
      "x-url" : "{endpoint}/apis/extensions/v1beta1"
    },
    "/deleteAppsV1CollectionNamespacedStatefulSet" : {
      "delete" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "删除指定namespace下的StatefulSets",
        "description" : "删除Namespace下所有StatefulSet。",
        "operationId" : "deleteAppsV1CollectionNamespacedStatefulSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteAppsV1CollectionNamespacedStatefulSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/statefulsets"
    },
    "/listCoreV1NamespacedResourceQuota" : {
      "get" : {
        "tags" : [ "ResourceQuota" ],
        "summary" : "查询指定namespace下的resourcequotas",
        "description" : "查询指定namespace下的resourcequotas(资源用量)。",
        "operationId" : "listCoreV1NamespacedResourceQuota",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ResourceQuotaList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedResourceQuota",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/resourcequotas"
    },
    "/replaceAppsV1NamespacedDeployment" : {
      "put" : {
        "tags" : [ "Deployment" ],
        "summary" : "替换Deployment",
        "description" : "替换Deployment。",
        "operationId" : "replaceAppsV1NamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.apps.v1.Deployment"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceAppsV1NamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
    },
    "/readCoreV1NamespacedService" : {
      "get" : {
        "tags" : [ "Service" ],
        "summary" : "查询Service",
        "description" : "查询Service的详细信息。",
        "operationId" : "readCoreV1NamespacedService",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Service"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedService",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services/{name}"
    },
    "/listExtensionsV1beta1NamespacedIngress" : {
      "get" : {
        "tags" : [ "Ingress" ],
        "summary" : "查询指定namespace下的Ingresses",
        "description" : "查询Namespace下所有Ingress的详细信息。",
        "operationId" : "listExtensionsV1beta1NamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.IngressList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listExtensionsV1beta1NamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses"
    },
    "/getNetworkingCciIoV1beta1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有networking.cci.io/v1beta1的API",
        "description" : "get available resources",
        "operationId" : "getNetworkingCciIoV1beta1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getNetworkingCciIoV1beta1APIResources",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1"
    },
    "/replaceBatchV1NamespacedJob" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "替换Job",
        "description" : "替换Job。",
        "operationId" : "replaceBatchV1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceBatchV1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs/{name}"
    },
    "/readMetricsV1beta1NamespacedPodMetrics" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "获取指定namespace下指定pod的metrics信息",
        "description" : "获取指定namespace下指定pod的metrics信息",
        "operationId" : "readMetricsV1beta1NamespacedPodMetrics",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetrics"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readMetricsV1beta1NamespacedPodMetrics",
      "x-url" : "{endpoint}/apis/metrics.k8s.io/v1beta1/namespaces/{namespace}/pods/{name}"
    },
    "/readCoreV1Namespace" : {
      "get" : {
        "tags" : [ "Namespace" ],
        "summary" : "查询Namespace",
        "description" : "查询Namespace的详细信息。",
        "operationId" : "readCoreV1Namespace",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Namespace"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1Namespace",
      "x-url" : "{endpoint}/api/v1/namespaces/{name}"
    },
    "/patchRbacAuthorizationV1NamespacedRoleBinding" : {
      "patch" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "更新指定的RoleBinding",
        "description" : "This API is used to partially update the specified RoleBinding",
        "operationId" : "patchRbacAuthorizationV1NamespacedRoleBinding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchRbacAuthorizationV1NamespacedRoleBinding",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
    },
    "/replaceBatchVolcanoShV1alpha1NamespacedJob" : {
      "put" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "替换Volcano Job",
        "description" : "替换Volcano Job。",
        "operationId" : "replaceBatchVolcanoShV1alpha1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceBatchVolcanoShV1alpha1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs/{name}"
    },
    "/createCoreV1NamespacedPod" : {
      "post" : {
        "tags" : [ "Pod" ],
        "summary" : "创建Pod",
        "description" : "创建一个Pod。",
        "operationId" : "createCoreV1NamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1NamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods"
    },
    "/patchExtensionsV1beta1NamespacedIngress" : {
      "patch" : {
        "tags" : [ "Ingress" ],
        "summary" : "更新Ingress",
        "description" : "更新Ingress。",
        "operationId" : "patchExtensionsV1beta1NamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchExtensionsV1beta1NamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}"
    },
    "/deleteNetworkingCciIoV1beta1CollectionNamespacedNetwork" : {
      "delete" : {
        "tags" : [ "Network" ],
        "summary" : "删除指定namespace下的Networks",
        "description" : "删除指定namespace下的所有Network对象。",
        "operationId" : "deleteNetworkingCciIoV1beta1CollectionNamespacedNetwork",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteNetworkingCciIoV1beta1CollectionNamespacedNetwork",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1/namespaces/{namespace}/networks"
    },
    "/deleteBatchV1NamespacedJob" : {
      "delete" : {
        "tags" : [ "Job" ],
        "summary" : "删除Job",
        "description" : "删除Job。",
        "operationId" : "deleteBatchV1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteBatchV1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs/{name}"
    },
    "/replaceCoreV1NamespacedPod" : {
      "put" : {
        "tags" : [ "Pod" ],
        "summary" : "替换Pod",
        "description" : "替换指定Pod。",
        "operationId" : "replaceCoreV1NamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCoreV1NamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}"
    },
    "/createCoreV1NamespacedConfigMap" : {
      "post" : {
        "tags" : [ "ConfigMap" ],
        "summary" : "创建ConfigMap",
        "description" : "创建ConfigMap。",
        "operationId" : "createCoreV1NamespacedConfigMap",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.ConfigMap"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1NamespacedConfigMap",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/configmaps"
    },
    "/deleteAppsV1CollectionNamespacedDeployment" : {
      "delete" : {
        "tags" : [ "Deployment" ],
        "summary" : "删除指定namespace下Deployments",
        "description" : "删除Namespace下所有Deployment。",
        "operationId" : "deleteAppsV1CollectionNamespacedDeployment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteAppsV1CollectionNamespacedDeployment",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments"
    },
    "/readNetworkingCciIoV1beta1NamespacedNetworkStatus" : {
      "get" : {
        "tags" : [ "Network" ],
        "summary" : "查询Network状态",
        "description" : "查询一个指定Network对象的状态。",
        "operationId" : "readNetworkingCciIoV1beta1NamespacedNetworkStatus",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readNetworkingCciIoV1beta1NamespacedNetworkStatus",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1/namespaces/{namespace}/networks/{name}/status"
    },
    "/listBatchVolcanoShV1alpha1NamespacedJob" : {
      "get" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "查询指定namespace下的Volcano Jobs",
        "description" : "查询命名空间下所有的Volcano Job。",
        "operationId" : "listBatchVolcanoShV1alpha1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.JobList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listBatchVolcanoShV1alpha1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs"
    },
    "/createBatchVolcanoShV1alpha1NamespacedJob" : {
      "post" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "创建Volcano Job",
        "description" : "创建Volcano Job。",
        "operationId" : "createBatchVolcanoShV1alpha1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createBatchVolcanoShV1alpha1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs"
    },
    "/getBatchV1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有batch/v1的API",
        "description" : "get available resources",
        "operationId" : "getBatchV1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getBatchV1APIResources",
      "x-url" : "{endpoint}/apis/batch/v1"
    },
    "/deleteCoreV1NamespacedPod" : {
      "delete" : {
        "tags" : [ "Pod" ],
        "summary" : "删除Pod",
        "description" : "删除Pod,删除前持续10s。",
        "operationId" : "deleteCoreV1NamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}"
    },
    "/listBatchV1JobForAllNamespaces" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "查询用户所有的Jobs",
        "description" : "This API is used to obtain a Job list.",
        "operationId" : "listBatchV1JobForAllNamespaces",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.JobList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listBatchV1JobForAllNamespaces",
      "x-url" : "{endpoint}/apis/batch/v1/jobs"
    },
    "/getAppsV1APIResources" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询所有apps/v1的API",
        "description" : "get available resources",
        "operationId" : "getAppsV1APIResources",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getAppsV1APIResources",
      "x-url" : "{endpoint}/apis/apps/v1"
    },
    "/readAppsV1NamespacedReplicaSet" : {
      "get" : {
        "tags" : [ "ReplicaSet" ],
        "summary" : "查询ReplicaSet",
        "description" : "查询ReplicaSet的详细信息。",
        "operationId" : "readAppsV1NamespacedReplicaSet",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.ReplicaSet"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readAppsV1NamespacedReplicaSet",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/replicasets/{name}"
    },
    "/getAppsAPIGroup" : {
      "get" : {
        "tags" : [ "API groups" ],
        "summary" : "查询APIGroup /apis/apps",
        "description" : "查询APIGroup /apis/apps",
        "operationId" : "getAppsAPIGroup",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "getAppsAPIGroup",
      "x-url" : "{endpoint}/apis/apps"
    },
    "/readNetworkingCciIoV1beta1NamespacedNetwork" : {
      "get" : {
        "tags" : [ "Network" ],
        "summary" : "查询Network",
        "description" : "查询指定Network对象。",
        "operationId" : "readNetworkingCciIoV1beta1NamespacedNetwork",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.cci.v1beta1.Network"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readNetworkingCciIoV1beta1NamespacedNetwork",
      "x-url" : "{endpoint}/apis/networking.cci.io/v1beta1/namespaces/{namespace}/networks/{name}"
    },
    "/readCoreV1NamespacedPod" : {
      "get" : {
        "tags" : [ "Pod" ],
        "summary" : "查询Pod",
        "description" : "查询Pod的详细信息。",
        "operationId" : "readCoreV1NamespacedPod",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Pod"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readCoreV1NamespacedPod",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/pods/{name}"
    },
    "/listAppsV1StatefulSetForAllNamespaces" : {
      "get" : {
        "tags" : [ "StatefulSet" ],
        "summary" : "查询用户所有的StatefulSets",
        "description" : "This API is used to list all StatefulSet resource objects.",
        "operationId" : "listAppsV1StatefulSetForAllNamespaces",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.apps.v1.StatefulSetList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listAppsV1StatefulSetForAllNamespaces",
      "x-url" : "{endpoint}/apis/apps/v1/statefulsets"
    },
    "/patchBatchVolcanoShV1alpha1NamespacedJob" : {
      "patch" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "更新Volcano Job",
        "description" : "更新Volcano Job。",
        "operationId" : "patchBatchVolcanoShV1alpha1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchBatchVolcanoShV1alpha1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs/{name}"
    },
    "/readBatchV1NamespacedJob" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "查询Job",
        "description" : "查询Job的详细信息。",
        "operationId" : "readBatchV1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "exact",
          "in" : "query",
          "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "export",
          "in" : "query",
          "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
          "schema" : {
            "description" : "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readBatchV1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs/{name}"
    },
    "/patchBatchV1NamespacedJob" : {
      "patch" : {
        "tags" : [ "Job" ],
        "summary" : "更新Job",
        "description" : "更新Job。",
        "operationId" : "patchBatchV1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.batch.v1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
          "schema" : {
            "description" : "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            },
            "application/strategic-merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "patch",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "patchBatchV1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch/v1/namespaces/{namespace}/jobs/{name}"
    },
    "/deleteCoreV1NamespacedPersistentVolumeClaim" : {
      "delete" : {
        "tags" : [ "PersistentVolumeClaim" ],
        "summary" : "删除PersistentVolumeClaim",
        "description" : "删除PersistentVolumeClaim。",
        "operationId" : "deleteCoreV1NamespacedPersistentVolumeClaim",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PersistentVolumeClaim"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedPersistentVolumeClaim",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
    },
    "/listCoreV1PodForAllNamespaces" : {
      "get" : {
        "tags" : [ "Pod" ],
        "summary" : "查询用户所有的Pods",
        "description" : "该API用于获取一个Pod列表。",
        "operationId" : "listCoreV1PodForAllNamespaces",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.PodList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1PodForAllNamespaces",
      "x-url" : "{endpoint}/api/v1/pods"
    },
    "/deleteBatchVolcanoShV1alpha1NamespacedJob" : {
      "delete" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "删除Volcano Job",
        "description" : "删除Volcano Job。",
        "operationId" : "deleteBatchVolcanoShV1alpha1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteBatchVolcanoShV1alpha1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs/{name}"
    },
    "/createRbacAuthorizationV1NamespacedRoleBinding" : {
      "post" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "创建RoleBinding",
        "description" : "This API is used to create a RoleBinding",
        "operationId" : "createRbacAuthorizationV1NamespacedRoleBinding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.rbac.v1.RoleBinding"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createRbacAuthorizationV1NamespacedRoleBinding",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings"
    },
    "/createExtensionsV1beta1NamespacedIngress" : {
      "post" : {
        "tags" : [ "Ingress" ],
        "summary" : "创建Ingress",
        "description" : "创建Ingress,使用http协议,关联的后端Service为“redis:8080”,使用ELB作为Ingress控制器,ELB的ip为192.168.137.182,端口号为6071。",
        "operationId" : "createExtensionsV1beta1NamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createExtensionsV1beta1NamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses"
    },
    "/deleteRbacAuthorizationV1NamespacedRoleBinding" : {
      "delete" : {
        "tags" : [ "RoleBinding" ],
        "summary" : "删除指定的RoleBinding",
        "description" : "This API is used to delete a RoleBinding",
        "operationId" : "deleteRbacAuthorizationV1NamespacedRoleBinding",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteRbacAuthorizationV1NamespacedRoleBinding",
      "x-url" : "{endpoint}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
    },
    "/replaceExtensionsV1beta1NamespacedIngress" : {
      "put" : {
        "tags" : [ "Ingress" ],
        "summary" : "替换Ingress",
        "description" : "替换Ingress。",
        "operationId" : "replaceExtensionsV1beta1NamespacedIngress",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.extensions.v1beta1.Ingress"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceExtensionsV1beta1NamespacedIngress",
      "x-url" : "{endpoint}/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}"
    },
    "/createCoreV1NamespacedSecret" : {
      "post" : {
        "tags" : [ "Secret" ],
        "summary" : "创建Secret",
        "description" : "创建Secret,Kubernetes提供了Secret来处理敏感信息。",
        "operationId" : "createCoreV1NamespacedSecret",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.core.v1.Secret"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCoreV1NamespacedSecret",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/secrets"
    },
    "/deleteCoreV1NamespacedEndpoints" : {
      "delete" : {
        "tags" : [ "Endpoint" ],
        "summary" : "删除Endpoint",
        "description" : "删除Endpoint。",
        "operationId" : "deleteCoreV1NamespacedEndpoints",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedEndpoints",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/endpoints/{name}"
    },
    "/createCrdYangtseCniV1NamespacedEIPPool" : {
      "post" : {
        "tags" : [ "EIPPool" ],
        "summary" : "创建EIPPool",
        "description" : "创建EIPPool。",
        "operationId" : "createCrdYangtseCniV1NamespacedEIPPool",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "AlreadyExists"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "post",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "createCrdYangtseCniV1NamespacedEIPPool",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools"
    },
    "/readBatchVolcanoShV1alpha1NamespacedJob" : {
      "get" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "查询Volcano Job详情",
        "description" : "查询Volcano Job的详细信息。",
        "operationId" : "readBatchVolcanoShV1alpha1NamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sh.volcano.batch.v1alpha1.Job"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "readBatchVolcanoShV1alpha1NamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs/{name}"
    },
    "/listCoreV1NamespacedEvent" : {
      "get" : {
        "tags" : [ "Event" ],
        "summary" : "查询指定namespace下的Events",
        "description" : "查询Namespace下所有Event的详细信息。",
        "operationId" : "listCoreV1NamespacedEvent",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.EventList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedEvent",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/events"
    },
    "/deleteBatchVolcanoShV1alpha1CollectionNamespacedJob" : {
      "delete" : {
        "tags" : [ "VolcanoJob" ],
        "summary" : "删除指定namespace下的Volcano Jobs",
        "description" : "删除命名空间下的所有Volcano Job。",
        "operationId" : "deleteBatchVolcanoShV1alpha1CollectionNamespacedJob",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ]
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteBatchVolcanoShV1alpha1CollectionNamespacedJob",
      "x-url" : "{endpoint}/apis/batch.volcano.sh/v1alpha1/namespaces/{namespace}/jobs"
    },
    "/deleteCoreV1NamespacedService" : {
      "delete" : {
        "tags" : [ "Service" ],
        "summary" : "删除Service",
        "description" : "删除Service。",
        "operationId" : "deleteCoreV1NamespacedService",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "gracePeriodSeconds",
          "in" : "query",
          "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "schema" : {
            "description" : "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "orphanDependents",
          "in" : "query",
          "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "schema" : {
            "description" : "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "propagationPolicy",
          "in" : "query",
          "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "schema" : {
            "description" : "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
              }
            }
          },
          "required" : false
        }
      },
      "x-method" : "delete",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "deleteCoreV1NamespacedService",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services/{name}"
    },
    "/replaceAppsV1NamespacedDeploymentScale" : {
      "put" : {
        "tags" : [ "Deployment" ],
        "summary" : "替换Deployment的伸缩操作",
        "description" : "This API is used to replace scale of the specified Scale.",
        "operationId" : "replaceAppsV1NamespacedDeploymentScale",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/io.k8s.api.autoscaling.v1.Scale"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceAppsV1NamespacedDeploymentScale",
      "x-url" : "{endpoint}/apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale"
    },
    "/listCoreV1NamespacedService" : {
      "get" : {
        "tags" : [ "Service" ],
        "summary" : "查询指定namespace下的Services",
        "description" : "查询Namespace下所有Service的详细信息。",
        "operationId" : "listCoreV1NamespacedService",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/io.k8s.api.core.v1.ServiceList"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "allowWatchBookmarks",
          "in" : "query",
          "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
          "schema" : {
            "description" : "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "name" : "continue",
          "in" : "query",
          "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
          "schema" : {
            "description" : "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "labelSelector",
          "in" : "query",
          "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema" : {
            "description" : "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
          "schema" : {
            "description" : "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersion",
          "in" : "query",
          "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "resourceVersionMatch",
          "in" : "query",
          "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
          "schema" : {
            "description" : "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "timeoutSeconds",
          "in" : "query",
          "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema" : {
            "description" : "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "type" : "integer",
            "uniqueItems" : true
          }
        }, {
          "name" : "watch",
          "in" : "query",
          "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema" : {
            "description" : "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "type" : "boolean",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        } ]
      },
      "x-method" : "get",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "listCoreV1NamespacedService",
      "x-url" : "{endpoint}/api/v1/namespaces/{namespace}/services"
    },
    "/replaceCrdYangtseCniV1NamespacedEIPPool" : {
      "put" : {
        "tags" : [ "EIPPool" ],
        "summary" : "替换EIPPool",
        "description" : "替换EIPPool。",
        "operationId" : "replaceCrdYangtseCniV1NamespacedEIPPool",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "NotFound"
          },
          "405" : {
            "description" : "MethodNotAllowed"
          },
          "406" : {
            "description" : "NotAcceptable"
          },
          "409" : {
            "description" : "Conflict"
          },
          "415" : {
            "description" : "UnsupportedMediaType"
          },
          "422" : {
            "description" : "Invalid"
          },
          "429" : {
            "description" : "TooManyRequests"
          },
          "500" : {
            "description" : "InternalError"
          },
          "503" : {
            "description" : "ServiceUnavailable"
          },
          "504" : {
            "description" : "ServerTimeout"
          }
        },
        "parameters" : [ {
          "name" : "dryRun",
          "in" : "query",
          "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "schema" : {
            "description" : "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "name" : "fieldManager",
          "in" : "query",
          "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
          "schema" : {
            "description" : "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "type" : "string",
            "uniqueItems" : true
          }
        }, {
          "$ref" : "#/components/parameters/X-Auth-Token"
        }, {
          "$ref" : "#/components/parameters/Content-Type-Patch"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/cni.yangtse.crd.v1.EIPPool"
              }
            }
          },
          "required" : true
        }
      },
      "x-method" : "put",
      "x-content-type" : "application/json;charset=UTF-8",
      "x-operationId" : "replaceCrdYangtseCniV1NamespacedEIPPool",
      "x-url" : "{endpoint}/apis/crd.yangtse.cni/v1/namespaces/{namespace}/eippools/{name}"
    }
  }
}